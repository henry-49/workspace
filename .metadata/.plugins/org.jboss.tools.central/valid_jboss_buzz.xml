<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>How to run Kafka on Openshift, the enterprise Kubernetes, with AMQ Streams</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/SLzpc6LTvW0/" /><category term="Containers" /><category term="Integration" /><category term="JBoss A-MQ" /><category term="Microservices" /><category term="Modern App Dev" /><category term="Stream Processing" /><category term="Apache Kafka" /><category term="Red Hat AMQ" /><category term="Red Hat AMQ Streams" /><category term="Red Hat OpenShift Container Platform" /><author><name>Hugo Guerrero</name></author><id>https://developers.redhat.com/blog/?p=531487</id><updated>2018-10-29T11:00:53Z</updated><published>2018-10-29T11:00:53Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400"&gt;On October 25th Red Hat &lt;/span&gt;&lt;a href="https://access.redhat.com/announcements/3667151"&gt;&lt;span style="font-weight: 400"&gt;announced&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; the general availability of their AMQ Streams Kubernetes Operator for Apache Kafka. &lt;/span&gt;&lt;a href="https://access.redhat.com/products/red-hat-amq-streams"&gt;&lt;span style="font-weight: 400"&gt;Red Hat AMQ Streams&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; focuses on running Apache Kafka on Openshift providing a massively-scalable, distributed, and high performance data streaming platform. AMQ Streams, based on the Apache Kafka and &lt;/span&gt;&lt;a href="http://strimzi.io/"&gt;&lt;span style="font-weight: 400"&gt;Strimzi&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; projects, offers a distributed backbone that allows &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; and other applications to share data with extremely high throughput. This backbone enables:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400"&gt;&lt;b&gt;Publish and subscribe:&lt;/b&gt;&lt;span style="font-weight: 400"&gt; Many to many dissemination in a fault tolerant, durable manner.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;b&gt;Replayable events:&lt;/b&gt;&lt;span style="font-weight: 400"&gt; Serves as a repository for microservices to build in-memory copies of source data, up to any point in time.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;b&gt;Long-term data retention:&lt;/b&gt;&lt;span style="font-weight: 400"&gt; Efficiently stores data for immediate access in a manner limited only by disk space.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;b&gt;Partition messages for more horizontal scalability:&lt;/b&gt;&lt;span style="font-weight: 400"&gt; Allows for organizing messages to maximum concurrent access.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;One of the most requested items from developers and architects is how to get started with a simple deployment option for testing purposes. In this guide we will use &lt;a href="https://developers.redhat.com/products/cdk/overview/"&gt;Red Hat Container Development Kit&lt;/a&gt;, based on minishift, to start an Apache Kafka cluster on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span id="more-531487"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;To set up a Kafka cluster on Openshift from scratch follow the next steps:&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400"&gt;Setup Red Hat Container Development Kit (CDK)&lt;/span&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Setup  CDK (minishift) on your laptop if you haven’t done that before.&lt;/span&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;a href="https://developers.redhat.com/products/cdk/download/"&gt;&lt;span style="font-weight: 400"&gt;Download CDK&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Follow the &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/cdk/hello-world"&gt;&lt;span style="font-weight: 400"&gt;Hello World&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; to install and configure CDK.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The latest version of CDK leverages the concept of profiles, so we will using them to avoid changing other configurations. Create a new &lt;code&gt;streams&lt;/code&gt; profile:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift profile set streams&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="3"&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt; Configure the system requirements (we recommend 8GB and at least 2 vCPUs available to run smoothly) in this new profile:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift config set cpus 2&lt;/code&gt;&lt;br /&gt; &lt;/span&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift config set memory 8192&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="4"&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt; In my case I use VirtualBox as the VM driver, substitute whichever hypervisor you are using:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift config set vm-driver virtualbox&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="5"&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt; Because of the Zookeeper dependencies on users, we will need to remove the anyuid add-on that comes out-of-the-box for CDK:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift addons disable anyuid&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 30px"&gt;&lt;b&gt;NOTE: This is a CRITICAL step if you are running CDK. If the add-on is not disabled you&amp;#8217;ll get an error when trying to start the Zookeeper TLS sidecar.&lt;/b&gt;&lt;/p&gt; &lt;ol start="6"&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt; Start the CDK environment&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ minishift start&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;You will see the following output if everything worked fine:&lt;/span&gt;&lt;/p&gt; &lt;pre style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;OpenShift server started.&lt;/span&gt; &lt;span style="font-weight: 400"&gt;The server is accessible via web console at:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;    https://192.168.99.100:8443&lt;/span&gt; &lt;span style="font-weight: 400"&gt;You are logged in as:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;    User:     developer&lt;/span&gt; &lt;span style="font-weight: 400"&gt;    Password: &amp;#60;any value&amp;#62;&lt;/span&gt; &lt;span style="font-weight: 400"&gt;To login as administrator:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;    oc login -u system:admin&lt;/span&gt; &lt;span style="font-weight: 400"&gt;-- Applying addon 'xpaas':..&lt;/span&gt; &lt;span style="font-weight: 400"&gt;XPaaS imagestream and templates for OpenShift installed&lt;/span&gt; &lt;span style="font-weight: 400"&gt;See https://github.com/openshift/openshift-ansible/tree/release-3.10/roles/openshift_examples/files/examples/v3.10&lt;/span&gt; &lt;span style="font-weight: 400"&gt;-- Applying addon 'admin-user':..&lt;/span&gt; &lt;span style="font-weight: 400"&gt;-- Exporting of OpenShift images is occuring in background process with pid 35470.&lt;/span&gt;&lt;/pre&gt; &lt;h2&gt;&lt;span style="font-weight: 400"&gt;Setup AMQ Streams &lt;/span&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;&lt;a href="https://access.redhat.com/node/3667151/423/0"&gt;Download the Red Hat AMQ Streams installation&lt;/a&gt; and example resources from the &lt;/span&gt;&lt;span style="font-weight: 400"&gt;Red Hat Customer Portal&lt;/span&gt;&lt;span style="font-weight: 400"&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt;Navigate to the unzipped folder to get access to the yaml files&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt;Unzip the downloaded &lt;code&gt;install_and_examples_0.zip&lt;/code&gt; file.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ cd &amp;#60;your_download_folder&amp;#62;/install_and_examples_0&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="2"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Login in to the OpenShift cluster with admin privileges:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ oc login -u system:admin&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="3"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Apply the customer resource definitions (CRDs) and role bindings required to manage the CRDs.&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ oc apply -f install/cluster-operator/&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="4"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The last step will create the Kafka CRD and start the deployment of the Cluster Operator. This operator will keep track of your kafka resources and provision or update the changes to those resources. Open a new browser tab and navigate to your web console URL:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;https://&amp;#60;your-ip&amp;#62;:8443/console/project/myproject/overview&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;Check the assigned IP issuing the &lt;code&gt;minishift ip&lt;/code&gt; command or just run  &lt;code&gt;minishift console&lt;/code&gt; and navigate to &lt;code&gt;My Project&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt; &lt;ol start="5"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Login in to the OpenShift web console to check the deployment. Use &lt;code&gt;developer&lt;/code&gt;/&lt;code&gt;developer&lt;/code&gt; as the user and password. If you haven’t done before, accept the self signed certificates in your browser.&lt;/span&gt;&lt;/span&gt;&lt;img class=" size-large wp-image-531587 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-login-ocp-1024x760.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-login-ocp-1024x760.png" alt="" width="640" height="475" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-login-ocp-1024x760.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-login-ocp-300x223.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-login-ocp-768x570.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;You will see in the project workspace the new deployed Cluster Operator running.&lt;/span&gt;&lt;/span&gt;&lt;img class=" size-large wp-image-531597 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-cluster-operator-1024x589.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-cluster-operator-1024x589.png" alt="" width="640" height="368" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-cluster-operator-1024x589.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-cluster-operator-300x173.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-cluster-operator-768x442.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/li&gt; &lt;li style="list-style-type: none"&gt;&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;span style="font-weight: 400"&gt;Setup your first Apache Kafka Cluster&lt;/span&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;The Cluster Operator now will listen for new Kafka resources. Let’s create a simple Kafka cluster with external access configured, so we are able to connect from outside the OpenShift cluster. &lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Create the new &lt;code&gt;my-cluster&lt;/code&gt; kafka Cluster with 3 zookeeper and 3 kafka nodes using &lt;code&gt;ephemeral&lt;/code&gt; storage:&lt;/span&gt; &lt;pre style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;$ cat &amp;#60;&amp;#60; EOF | oc create -f -&lt;/span&gt; &lt;span style="font-weight: 400"&gt;apiVersion: kafka.strimzi.io/v1alpha1&lt;/span&gt; &lt;span style="font-weight: 400"&gt;kind: Kafka&lt;/span&gt; &lt;span style="font-weight: 400"&gt;metadata: &lt;/span&gt; &lt;span style="font-weight: 400"&gt; name: my-cluster&lt;/span&gt; &lt;span style="font-weight: 400"&gt;spec:&lt;/span&gt; &lt;span style="font-weight: 400"&gt; kafka:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   replicas: 3&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   listeners:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;     external:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;       type: route&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   storage:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;     type: ephemeral&lt;/span&gt; &lt;span style="font-weight: 400"&gt; zookeeper:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   replicas: 3&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   storage:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;     type: ephemeral&lt;/span&gt; &lt;span style="font-weight: 400"&gt; entityOperator:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   topicOperator: {}&lt;/span&gt; &lt;span style="font-weight: 400"&gt;EOF&lt;/span&gt;&lt;/pre&gt; &lt;ol&gt; &lt;li style="list-style-type: none"&gt; &lt;ol&gt; &lt;li style="list-style-type: none"&gt;&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Wait a couple minutes, after that you will see the deployment of the Zookeeper and Kafka resources as well as the topic operator.&lt;/span&gt;&lt;/span&gt;&lt;img class=" size-large wp-image-531627 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-kafka-cluster-1024x739.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-kafka-cluster-1024x739.png" alt="" width="640" height="462" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-kafka-cluster-1024x739.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-kafka-cluster-300x217.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bp-kafka-cluster-768x554.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&amp;#160;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400"&gt;Now that our cluster is running, we can create a topic to publish and subscribe from our external client. Create the following &lt;code&gt;my-topic&lt;/code&gt; Topic custom resource definition with 3 replicas and 3 partitions in &lt;code&gt;my-cluster&lt;/code&gt; Kafka cluster:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;pre style="padding-left: 60px"&gt;&lt;span style="font-weight: 400"&gt;$ cat &amp;#60;&amp;#60; EOF | oc create -f -&lt;/span&gt; &lt;span style="font-weight: 400"&gt;apiVersion: kafka.strimzi.io/v1alpha1&lt;/span&gt; &lt;span style="font-weight: 400"&gt;kind: KafkaTopic&lt;/span&gt; &lt;span style="font-weight: 400"&gt;metadata:&lt;/span&gt; &lt;span style="font-weight: 400"&gt; name: my-topic&lt;/span&gt; &lt;span style="font-weight: 400"&gt; labels:&lt;/span&gt; &lt;span style="font-weight: 400"&gt;   strimzi.io/cluster: "my-cluster"&lt;/span&gt; &lt;span style="font-weight: 400"&gt;spec:&lt;/span&gt; &lt;span style="font-weight: 400"&gt; partitions: 3&lt;/span&gt; &lt;span style="font-weight: 400"&gt; replicas: 3&lt;/span&gt; &lt;span style="font-weight: 400"&gt;EOF&lt;/span&gt;&lt;/pre&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;You are now ready to start sending and receiving messages.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;span style="font-weight: 400"&gt;Test using an external application&lt;/span&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Clone this &lt;/span&gt;&lt;a href="https://github.com/hguerrero/amq-examples.git"&gt;&lt;span style="font-weight: 400"&gt;git repo&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; to test the access from to your new Kafka cluster:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ git clone https://github.com/hguerrero/amq-examples.git&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="2"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Switch to the &lt;code&gt;camel-kafka-demo&lt;/code&gt; folder&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ cd amq-examples/camel-kafka-demo/&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="3"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;As we are using &lt;strong&gt;Routes&lt;/strong&gt; for external access to the cluster, we need the CA certs to enable TLS in the client. Extract the public certificate of the broker certification authority&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ oc extract secret/my-cluster-cluster-ca-cert --keys=ca.crt --to=- &amp;#62; src/main/resources/ca.crt&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="4"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Import the trusted cert to a keystore&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ keytool -import -trustcacerts -alias root -file src/main/resources/ca.crt -keystore src/main/resources/keystore.jks -storepass password -noprompt&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;ol start="5"&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Now you can run the Fuse application using the maven command:&lt;/span&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;&lt;code&gt;$ mvn -Drun.jvmArguments="-Dbootstrap.server=`oc get routes my-cluster-kafka-bootstrap -o=jsonpath='{.status.ingress[0].host}{"\n"}'`:443" clean package spring-boot:run&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;After finishing the clean and package phases you will see the Spring Boot application start creating a producer and consumer sending and receiving messages from the “my-topic” Kafka topic.&lt;/span&gt;&lt;/p&gt; &lt;pre style="padding-left: 30px"&gt;&lt;span style="font-weight: 400"&gt;14:36:18.170 [main] INFO  com.redhat.kafkademo.Application - Started Application in 12.051 seconds (JVM running for 12.917)&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:18.490 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=6de87ffa-c7cf-441b-b1f8-e55daabc8d12] Discovered coordinator my-cluster-kafka-1-myproject.192.168.99.100.nip.io:443 (id: 2147483646 rack: null)&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:18.498 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=6de87ffa-c7cf-441b-b1f8-e55daabc8d12] Revoking previously assigned partitions []&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:18.498 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=6de87ffa-c7cf-441b-b1f8-e55daabc8d12] (Re-)joining group&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:19.070 [Camel (MyCamel) thread #3 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-2&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:19.987 [Camel (MyCamel) thread #4 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-4&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:20.982 [Camel (MyCamel) thread #5 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-6&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:21.620 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  o.a.k.c.c.i.AbstractCoordinator - [Consumer clientId=consumer-1, groupId=6de87ffa-c7cf-441b-b1f8-e55daabc8d12] Successfully joined group with generation 1&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:21.621 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-1, groupId=6de87ffa-c7cf-441b-b1f8-e55daabc8d12] Setting newly assigned partitions [my-topic-0, my-topic-1, my-topic-2]&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:21.959 [Camel (MyCamel) thread #6 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-8&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:21.973 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  consumer-route - consumer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-8&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:22.970 [Camel (MyCamel) thread #7 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-11&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:22.975 [Camel (MyCamel) thread #1 - KafkaConsumer[my-topic]] INFO  consumer-route - consumer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-11&lt;/span&gt; &lt;span style="font-weight: 400"&gt;14:36:23.968 [Camel (MyCamel) thread #8 - KafkaProducer[my-topic]] INFO  producer-route - producer &amp;#62;&amp;#62;&amp;#62; Hello World from camel-context.xml with ID ID-hguerrer-osx-1540578972584-0-14&lt;/span&gt; &lt;/pre&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;You’re done! Press &lt;code&gt;Ctrl + C&lt;/code&gt; to stop the running program.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt; You&amp;#8217;ve seen how easy it is to create an Apache Kafka cluster in OpenShift and be ready to have your applications send and consume messages using it. You can find more information in the official &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq_streams/1.0/html-single/using_amq_streams_on_openshift_container_platform/"&gt;&lt;span style="font-weight: 400"&gt;getting started guide&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; if you want to check more advanced configurations.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Soon, I will publish an another how to configuring configuring Kafka Connect and Kafka Streams with OpenShift and AMQ Streams.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;linkname=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F29%2Fhow-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams%2F&amp;#38;title=How%20to%20run%20Kafka%20on%20Openshift%2C%20the%20enterprise%20Kubernetes%2C%20with%20AMQ%20Streams" data-a2a-url="https://developers.redhat.com/blog/2018/10/29/how-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams/" data-a2a-title="How to run Kafka on Openshift, the enterprise Kubernetes, with AMQ Streams"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/29/how-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams/"&gt;How to run Kafka on Openshift, the enterprise Kubernetes, with AMQ Streams&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/SLzpc6LTvW0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;On October 25th Red Hat announced the general availability of their AMQ Streams Kubernetes Operator for Apache Kafka. Red Hat AMQ Streams focuses on running Apache Kafka on Openshift providing a massively-scalable, distributed, and high performance data streaming platform. AMQ Streams, based on the Apache Kafka and Strimzi projects, offers a distributed backbone that allows [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/29/how-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams/"&gt;How to run Kafka on Openshift, the enterprise Kubernetes, with AMQ Streams&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/29/how-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">531487</post-id><dc:creator>Hugo Guerrero</dc:creator><dc:date>2018-10-29T11:00:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/29/how-to-run-kafka-on-openshift-the-enterprise-kubernetes-with-amq-streams/</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 21/2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/s4-vYmdg0Zg/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_21_2018</id><updated>2018-10-29T15:16:35Z</updated><published>2018-10-29T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="market-share"&gt;&lt;a class="anchor" href="#market-share"&gt;&lt;/a&gt;Market share&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;According to the &lt;a href="https://snyk.io/blog/jvm-ecosystem-report-2018-platform-application"&gt;2018 JVM ecosystem report published by Snyk&lt;/a&gt;, Hibernate has a 54% market share, making it the most popular Java data access technology.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Although it’s been available since 2001, Hibernate has been evolving constantly, and the Hibernate ORM version 6 is going to bring many new features and improvements, so stay tuned!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JPA 2.2 supports the following &lt;code&gt;java.time&lt;/code&gt; types introduced by Java 8:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalDate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.LocalDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.OffsetTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.OffsetDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Apart from supporting all those types, Hibernate provides the following extra types:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Duration&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.Instant&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;code&gt;java.time.ZonedDateTime&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;However, neither JPA nor Hibernate support the &lt;code&gt;java.time.Year&lt;/code&gt; and &lt;code&gt;java.time.YearMonth&lt;/code&gt; out-of-the-box. The following two articles show you how to support these types when using JPA and Hibernate:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://vladmihalcea.com/java-time-year-month-jpa-hibernate/"&gt;How to map &lt;code&gt;java.time.Year&lt;/code&gt; and &lt;code&gt;java.time.Month&lt;/code&gt; with JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://vladmihalcea.com/java-yearmonth-jpa-hibernate/"&gt;How to map the Java &lt;code&gt;YearMonth&lt;/code&gt; type with JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eugen Paraschiv wrote two articles about Hibernate:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://www.baeldung.com/stored-procedures-with-hibernate-tutorial"&gt;How to use stored procedures with Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://www.baeldung.com/hibernate-custom-types"&gt;How to implement custom types with Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/hibernate-lazy-mode-doesnt-work-with-spring-boot/1535"&gt;Hibernate Lazy Mode doesn’t work with Spring Boot&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/43059147/hibernate-serialize-java-time-year-and-others/52886156#52886156"&gt;How to map &lt;code&gt;java.time.Year&lt;/code&gt; and others &lt;code&gt;java.time&lt;/code&gt; types using Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/52850442/getting-rid-if-n1-with-jpa-criteria-api-in-hibernate/52945771#52945771"&gt;How to get rid of N+1 with JPA Criteria API in Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/hiberante-returns-stale-data-from-the-cache-instead-of-the-latest-record-from-the-db/1592"&gt;Hibernate returns stale data from the cache instead of the latest record from the DB&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/42256527/how-to-avoid-java-util-concurrentmodificationexception-in-entity-merging-in-jpa/42266413#42266413"&gt;How to avoid java.util.ConcurrentModificationException in entity merging in JPA and Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/hibernate-postgresql-jsonb-issue-no-dialect-mapping-for-jdbc-type-1111/1612"&gt;Hibernate PostgreSQL JSONB issue: No Dialect mapping for JDBC type: 1111&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/52988292/possibility-of-race-condition-during-time-slot-between-hibernate-optimistic-lock/53034456#53034456"&gt;Possibility of race condition during time slot between Hibernate optimistic locking version check and transaction commit&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/7349464/bulk-insert-or-update-with-hibernate/51324134#51324134"&gt;Bulk insert or update with Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/error-while-reading-the-hbm-xml-file/1577"&gt;Error while reading the hbm.xml file&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/jpa-entity-with-abstract-field-needs-discriminator/1554"&gt;JPA entity with abstract field needs discriminator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/should-i-use-an-application-generated-entity-identifier-or-use-the-database-native-generator-with-hibernate/1493/12"&gt;Should I use an application-generated entity identifier or use the database native generator with Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/does-hibernate-provide-a-way-to-invalidate-l2-cache/1405/5"&gt;Does Hibernate provide a way to invalidate L2 cache?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/hibernate-query-cache/1558"&gt;Hibernate query cache and consistency issues&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/criteria-stopped-working-after-upgrading-hibernate-orm-to-5-3-7/1556"&gt;Criteria stopped working after upgrading Hibernate ORM to 5.3.7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/53019285/how-to-set-parentid-in-child-entity-of-one-to-many-mapping-using-spring-boot-dat/53019467#53019467"&gt;How to set the &lt;code&gt;parentId&lt;/code&gt; property in a child Entity of one-to-many mapping using Spring Boot Data JPA&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/s4-vYmdg0Zg" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Market share According to the 2018 JVM ecosystem report published by Snyk, Hibernate has a 54% market share, making it the most popular Java data access technology. Although it’s been available since 2001, Hibernate has been evolving constantly, ...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-10-29T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/10/29/hibernate-community-newsletter-2018-21/</feedburner:origLink></entry><entry><title>How to install Ansible Tower on Red Hat OpenShift</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZOBHEt1c2i4/" /><category term="Ansible" /><category term="Containers" /><category term="Red Hat OpenShift Container Platform" /><category term="Ansible Tower" /><category term="automation" /><category term="containers" /><category term="DevOps" /><category term="Red Hat OpenShift" /><author><name>Michele Naldini</name></author><id>https://developers.redhat.com/blog/?p=527517</id><updated>2018-10-26T22:25:56Z</updated><published>2018-10-26T22:25:56Z</published><content type="html">&lt;p&gt;In this article, I will show how to install and manage &lt;a href="https://www.redhat.com/en/technologies/management/ansible"&gt;Red Hat Ansible Tower&lt;/a&gt; on &lt;a href="https://developers.redhat.com/products/openshift/"&gt;Red Hat OpenShift Container Platform&lt;/a&gt;. Ansible Tower helps you scale IT automation, manage complex deployments, and improve productivity. You can centralize and control your IT infrastructure with a visual dashboard, and it provides role-based access control, job scheduling, integrated notifications, graphical inventory management, and more.&lt;/p&gt; &lt;p&gt;As you may know, Ansible Tower 3.3, the latest release of this automation platform, was released a few weeks ago and added new features. From the &lt;a href="https://docs.ansible.com/ansible-tower/latest/html/release-notes/relnotes.html#ansible-tower-version-3-3-0"&gt;release notes&lt;/a&gt; you&amp;#8217;ll see that Ansible Tower 3.3 added support for a container-based installation on top of OpenShift or &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;In this blog, we&amp;#8217;ll see how easy it is to set up Ansible Tower 3.3 on OpenShift and have it running as a &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;container&lt;/a&gt; in just a few minutes.&lt;/p&gt; &lt;p&gt;&lt;span id="more-527517"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Overview of the process&lt;/h2&gt; &lt;p&gt;We&amp;#8217;ll follow these steps:&lt;/p&gt; &lt;ol&gt; &lt;li&gt;Log in on an existing OpenShift installation.&lt;/li&gt; &lt;li&gt;Create a dedicated project where Ansible Tower will be installed.&lt;/li&gt; &lt;li&gt;Create a persistent volume claim (PVC) and, if it&amp;#8217;s not already present, create a physical volume (PV).&lt;/li&gt; &lt;li&gt;Start the installation process.&lt;/li&gt; &lt;li&gt;Finally, use Ansible Tower as a service and perform a scale-out.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;Resources and requirements&lt;/h2&gt; &lt;p&gt;Refer to the following resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://docs.ansible.com/ansible-tower/3.3.0/html/administration/openshift_configuration.html"&gt;OpenShift Deployment and Configuration&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://releases.ansible.com/ansible-tower/setup_openshift/"&gt;Download Ansible tower OpenShift setup script&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The requirements mentioned in &lt;a href="https://docs.ansible.com/ansible-tower/3.3.0/html/administration/openshift_configuration.html"&gt;OpenShift Deployment and Configuration&lt;/a&gt; for Ansible Tower on OpenShift are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Red Hat OpenShift 3.6+&lt;/li&gt; &lt;li&gt;Per-pod default resource requirements: &lt;ul&gt; &lt;li&gt;6GB RAM&lt;/li&gt; &lt;li&gt;3 CPU cores&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;OpenShift command-line tool (&lt;code&gt;oc&lt;/code&gt;) on the machine running the installer&lt;/li&gt; &lt;li&gt;A set-up and running OpenShift cluster&lt;/li&gt; &lt;li&gt;Admin privileges for the account running the OpenShift installer&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;Procedure&lt;/h2&gt; &lt;p&gt;So let&amp;#8217;s start to create the Ansible Tower prerequisites on OpenShift. First, let&amp;#8217;s log in:&lt;/p&gt; &lt;pre&gt;$ oc login myamazingopenshiftcluster -u myuser -p mypassword Username: myuser Password: Login successful. You have access to the following projects and can switch between them with 'oc project &amp;#60;projectname&amp;#62;': *default kube-public kube-service-catalog kube-system management-infra ocp-workshop openshift openshift-ansible-service-broker openshift-infra openshift-logging openshift-node openshift-sdn openshift-template-service-broker openshift-web-console Using project "default". The server uses a certificate signed by an unknown authority. You can bypass the certificate check, but any data you send to the server could be intercepted by others. Use insecure connections? (y/n): y Login successful.&lt;/pre&gt; &lt;p&gt;Let&amp;#8217;s create a new project called &lt;code&gt;tower&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;$ oc new-project tower Now using project "tower" on server "https://myamazingopenshiftcluster :443". You can add applications to this project with the 'new-app' command. For example, try: $ oc new-app centos/ruby-22-centos7~https://github.com/openshift/ruby-ex.git to build a new example application in Ruby. &lt;/pre&gt; &lt;p&gt;As additional prerequisites, Ansible Tower requires a PVC to be used by a Postgres database to persist its data.&lt;/p&gt; &lt;p&gt;In our case, we are going to create a 10 GB PVC using this YAML file:&lt;/p&gt; &lt;pre&gt;$ cat postgres-nfs-pvc apiVersion: v1 kind: PersistentVolumeClaim metadata: name: postgresql spec: accessModes: - ReadWriteOnce resources: requests: storage: 10Gi&lt;/pre&gt; &lt;p&gt;Now we can ask OpenShift to create the PVC for us:&lt;/p&gt; &lt;pre&gt;$ oc create -f postgres-nfs-pvc persistentvolumeclaim "postgresql" created&lt;/pre&gt; &lt;p&gt;Our PVC will be bound to a PV that matches the access method and size.&lt;/p&gt; &lt;p&gt;If you don&amp;#8217;t have a PV that will be claimed by our PVC, you can follow the official &lt;a href="https://access.redhat.com/documentation/en-us/openshift_container_platform/3.11/html-single/developer_guide/#dev-guide-volumes"&gt;OpenShift documentation&lt;/a&gt; to create it.&lt;/p&gt; &lt;pre&gt;$ oc get pvc NAME         STATUS VOLUME    CAPACITY ACCESS MODES   STORAGECLASS AGE postgresql   Bound vol118    10Gi RWO,RWX        2s&lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Last, you have to &lt;a href="https://releases.ansible.com/ansible-tower/setup_openshift/"&gt;download the installation setup tar file&lt;/a&gt;,  untar it, and then execute the following:&lt;/p&gt; &lt;pre&gt;$ ./setup_openshift.sh -e openshift_host=https://myamazingopenshiftcluster:443 -e openshift_project=tower -e openshift_user=myuser -e openshift_password=mypassword -e admin_password=toweradminpwd-e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;setup_openshift.sh&lt;/code&gt; script will execute some Ansible playbooks and those will manage for you the entire installation by creating your pods, services, and routes.&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all! In a few minutes, Ansible Tower will be up and running.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b.png"&gt;&lt;img class=" aligncenter wp-image-527587 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b-1024x535.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b.png" alt="Ansible Tower set up in Red Hat OpenShift Container Platform" width="2554" height="1334" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b.png 2554w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b-300x157.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b-768x401.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc098d45dc2b-1024x535.png 1024w" sizes="(max-width: 2554px) 100vw, 2554px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s now investigate how Ansible Tower was installed. As you may notice from the UI, there is one pod composed of four containers managed through a &lt;code&gt;StatefulSet&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Run the following command from the CLI:&lt;/p&gt; &lt;pre&gt;$ oc describe sts ansible-tower Name: ansible-tower Namespace: tower CreationTimestamp: Tue, 09 Oct 2018 17:14:51 +0200 Selector: app=ansible-tower,name=ansible-tower-web-deploy,service=django Labels: app=ansible-tower name=ansible-tower-web-deploy service=django Annotations: kubectl.kubernetes.io/last-applied-configuration={"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{},"name":"ansible-tower","namespace":"tower"},"spec":{"replicas":1,"templa... Replicas: 1 desired | 1 total Pods Status: 1 Running / 0 Waiting / 0 Succeeded / 0 Failed Pod Template: Labels: app=ansible-tower name=ansible-tower-web-deploy service=django Service Account: awx Containers: &lt;em&gt;output truncated&lt;/em&gt;&lt;/pre&gt; &lt;p&gt;As you may notice, the &lt;code&gt;Replicas&lt;/code&gt; value is 1, so one pod (that is, one Ansible Tower instance) will be running.&lt;/p&gt; &lt;p&gt;The good thing is that if you can scale up your &lt;code&gt;StatefulSet&lt;/code&gt; replica count, Ansible Tower will be scaled accordingly!&lt;/p&gt; &lt;p&gt;You can manage this change by using the UI and editing the YAML file or by using &lt;code&gt;oc&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Take a look at the current status:&lt;/p&gt; &lt;pre&gt;$ oc get sts NAME DESIRED CURRENT AGE ansible-tower 1 1 3d&lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s how to scale up:&lt;/p&gt; &lt;pre&gt;$ oc scale --replicas=2 sts ansible-tower statefulset "ansible-tower" scaled&lt;/pre&gt; &lt;p&gt;Now check the running configuration again:&lt;/p&gt; &lt;pre&gt;$ oc get sts NAME DESIRED CURRENT AGE ansible-tower 2 2 3d&lt;/pre&gt; &lt;p&gt;Here&amp;#8217;s what the web console shows now:&lt;/p&gt; &lt;p id="ArWqLjK"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d.png"&gt;&lt;img class=" aligncenter wp-image-527737 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d-1024x536.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d.png" alt="The result after scaling up" width="2473" height="1294" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d.png 2473w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d-300x157.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d-768x402.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/img_5bc0d47b8f34d-1024x536.png 1024w" sizes="(max-width: 2473px) 100vw, 2473px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all! If you want to see a short demo of the process, check out this video:&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='360' src='https://www.youtube.com/embed/o-OrUq6FAe0?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;linkname=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F26%2Finstalling-and-managing-ansible-tower-on-red-hat-openshift-container-platform%2F&amp;#38;title=How%20to%20install%20Ansible%20Tower%20on%20Red%20Hat%20OpenShift" data-a2a-url="https://developers.redhat.com/blog/2018/10/26/installing-and-managing-ansible-tower-on-red-hat-openshift-container-platform/" data-a2a-title="How to install Ansible Tower on Red Hat OpenShift"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/26/installing-and-managing-ansible-tower-on-red-hat-openshift-container-platform/"&gt;How to install Ansible Tower on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZOBHEt1c2i4" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, I will show how to install and manage Red Hat Ansible Tower on Red Hat OpenShift Container Platform. Ansible Tower helps you scale IT automation, manage complex deployments, and improve productivity. You can centralize and control your IT infrastructure with a visual dashboard, and it provides role-based access control, job scheduling, integrated notifications, graphical inventory management, [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/26/installing-and-managing-ansible-tower-on-red-hat-openshift-container-platform/"&gt;How to install Ansible Tower on Red Hat OpenShift&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/26/installing-and-managing-ansible-tower-on-red-hat-openshift-container-platform/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">527517</post-id><dc:creator>Michele Naldini</dc:creator><dc:date>2018-10-26T22:25:56Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/26/installing-and-managing-ansible-tower-on-red-hat-openshift-container-platform/</feedburner:origLink></entry><entry><title>Welcome Apache Kafka to the Kubernetes Era!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lNrph9_MQKY/" /><category term="Announcement" /><category term="Containers" /><category term="JBoss A-MQ" /><category term="Microservices" /><category term="Modern App Dev" /><category term="Stream Processing" /><category term="Apache Kafka" /><category term="Kafka streams" /><category term="kubernetes" /><category term="Kubernetes Operator" /><category term="Red Hat AMQ" /><category term="Red Hat AMQ Streams" /><category term="Red Hat OpenShift" /><author><name>Hugo Guerrero</name></author><id>https://developers.redhat.com/blog/?p=531027</id><updated>2018-10-25T15:00:07Z</updated><published>2018-10-25T15:00:07Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400"&gt;We have pretty exciting news this week as &lt;a href="https://access.redhat.com/announcements/3667151"&gt;Red Hat is announcing the General Availability of their Apache Kafka Kubernetes operator&lt;/a&gt;. Red Hat AMQ Streams delivers the mechanisms for managing Apache Kafka on top of OpenShift, our enterprise distribution for Kubernetes. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Everything started last May 2018 when David Ingham (@dingha)&lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/2018/05/07/announcing-amq-streams-apache-kafka-on-openshift/"&gt; &lt;span style="font-weight: 400"&gt;unveiled the Developer Preview&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; as new addition to the&lt;/span&gt; &lt;span style="font-weight: 400"&gt;Red Hat AMQ&lt;/span&gt;&lt;span style="font-weight: 400"&gt; offering. &lt;a href="https://access.redhat.com/products/red-hat-amq-streams"&gt;Red Hat AMQ Streams&lt;/a&gt; focuses on running Apache Kafka on OpenShift. In the &lt;a href="https://developers.redhat.com/topics/microservices/"&gt;microservices&lt;/a&gt; world, where several components need to rely on a high throughput communication mechanism, Apache Kafka has made a name for itself for being a leading real-time, distributed messaging platform for building data pipelines and streaming applications. &lt;/span&gt;&lt;span id="more-531027"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;A leader in the traditional infrastructure deployments, Apache Kafka was missing pieces to be a easily usable container-native citizen in the new&lt;/span&gt; &lt;span style="font-weight: 400"&gt;Kubernetes&lt;/span&gt;&lt;span style="font-weight: 400"&gt; era.  As a result, a team grouped in 2017 to create the upstream &lt;/span&gt;&lt;a href="http://strimzi.io/"&gt;&lt;span style="font-weight: 400"&gt;Strimzi&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; project. This team worked to apply the new &lt;/span&gt;&lt;a href="https://coreos.com/blog/introducing-operators.html"&gt;&lt;span style="font-weight: 400"&gt;operator pattern&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; to solve the gaps. With the development of new components deployed along the traditional Apache Kafka broker, these new Kubernetes operators are now able to manage cluster wide resources as well as entities as topics and authentication users.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Even more, these Kubernetes operators are pretty simple to use and cover most of the more common configuration management of a cluster. After doing some Kubernetes Custom Resource Definition installations in OpenShift, any user is able to create an Apache Kafka cluster by just creating a new Kafka resource definition. Then, the cluster operator will take that definition and provision the required components to have a fully deployed cluster on top of your OpenShift infrastructure. The same applies for the creation of Topics and Users for that same Kafka cluster.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Finally, the most interesting part, is the simple configuration to provision a cluster that&amp;#8217;s easily available from outside the OpenShift cluster via NodePorts, Load Balancers or Routes, the latter being  the easiest way to start working. Depending on your application requirements, you will be able to choose from using the simple secure over TLS approach or the traditional NodePort settings. As a result, the AMQ Streams operators embedded logic creates dynamic services, routes and certificates to access the Apache Kafka cluster from external clients. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Yes, it sounds like magic. That’s how good it is! Give Red Hat AMQ Streams a try by downloading Red Hat Container Development Kit for an OpenShift development environment and following our &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_amq_streams/1.0/html/using_amq_streams/"&gt;&lt;span style="font-weight: 400"&gt;Getting Started Guide&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. Also, be aware of my (soon to be published) HOW-TO guide for Kafka on OpenShift, the enterprise Kubernetes!&lt;/span&gt;&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;Here are some other articles on Apache Kafka and Red Hat AMQ Streams:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/05/07/announcing-amq-streams-apache-kafka-on-openshift/"&gt;Announcing AMQ Streams: Apache Kafka on OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/07/16/smart-meter-streams-kafka-openshift/"&gt;Smart-Meter Data Processing Using Apache Kafka on OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/10/15/eventflow-event-driven-microservices-on-openshift-part-1/"&gt;EventFlow: Event-driven microservices on OpenShift (Part 1)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/07/26/detecting-credit-card-fraud-with-red-hat-decision-manager-7/"&gt;Detecting credit card fraud with Red Hat Decision Manager 7&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/05/31/introducing-the-kafka-cdi-library/"&gt;Introducing the Kafka-CDI Library&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;linkname=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F25%2Fwelcome-apache-kafka-to-the-kubernetes-era%2F&amp;#38;title=Welcome%20Apache%20Kafka%20to%20the%20Kubernetes%20Era%21" data-a2a-url="https://developers.redhat.com/blog/2018/10/25/welcome-apache-kafka-to-the-kubernetes-era/" data-a2a-title="Welcome Apache Kafka to the Kubernetes Era!"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/25/welcome-apache-kafka-to-the-kubernetes-era/"&gt;Welcome Apache Kafka to the Kubernetes Era!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lNrph9_MQKY" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We have pretty exciting news this week as Red Hat is announcing the General Availability of their Apache Kafka Kubernetes operator. Red Hat AMQ Streams delivers the mechanisms for managing Apache Kafka on top of OpenShift, our enterprise distribution for Kubernetes. Everything started last May 2018 when David Ingham (@dingha) unveiled the Developer Preview as [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/25/welcome-apache-kafka-to-the-kubernetes-era/"&gt;Welcome Apache Kafka to the Kubernetes Era!&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/25/welcome-apache-kafka-to-the-kubernetes-era/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">531027</post-id><dc:creator>Hugo Guerrero</dc:creator><dc:date>2018-10-25T15:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/25/welcome-apache-kafka-to-the-kubernetes-era/</feedburner:origLink></entry><entry><title>GCC 8 and tools now in beta for Red Hat Enterprise Linux 6 and 7</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/kvhoIC1Va0I/" /><category term="Announcement" /><category term="C" /><category term="C++" /><category term="Developer Tools" /><category term="Red Hat Developer Toolset" /><category term="Red Hat Enterprise Linux" /><category term="developer toolset" /><category term="DevTools" /><category term="gcc" /><category term="gdb" /><category term="GNU Compiler Collection" /><category term="Red Hat Software Collections" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=530727</id><updated>2018-10-24T15:00:40Z</updated><published>2018-10-24T15:00:40Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;We are pleased to announce the immediate availability of &lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;Red Hat Developer Toolset&lt;/a&gt; 8 beta for &lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;Red Hat Enterprise Linux&lt;/a&gt; 6 and 7.  The key new components for this release are:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;GCC 8.2.1&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;GDB 8.2&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Updated components such as SystemTap, Valgrind, OProfile, and many more&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Like other tools, these are installable via &lt;code&gt;yum&lt;/code&gt; from the Red Hat Enterprise Linux 6 or 7 Devtools or RHSCL channel.  For more details, see the &amp;#8220;New Features&amp;#8221; section below.&lt;/span&gt;&lt;span id="more-530727"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;About Red Hat Developer Toolset&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Twice a year, Red Hat distributes new versions of compiler toolsets, scripting languages, open source databases, and web tools providing application developers with access to the latest, stable versions. These Red Hat supported offerings are packaged as&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Red Hat Software Collections&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (scripting languages, open source databases, web tools, etc.), &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Toolset&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (GCC), and the recently added compiler toolsets&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Clang/LLVM, Go, and Rust&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. All are yum installable, and are included in all Red Hat Enterprise Linux Developer Subscriptions and most Red Hat Enterprise Linux subscriptions. Most components are also available as Linux container images for hybrid cloud development across Red Hat platforms including: Red Hat Enterprise Linux, Red Hat OpenShift, Red Hat OpenStack, etc.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;New features in Developer Toolset 8:&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Version 8 of the Developer Toolset (DTS) is based on GCC version 8.2.1, and DTS users are encouraged to update to DTS 8. The following new compiler features are included in GCC 8:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Interprocedural optimization improvements&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improvements in profile driven optimizations (PGO)&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improvements in link time optimizations (LTO) &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Changes in loop nest optimization flags&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;New code generation options to increase program security (-fstack-clash-protection)&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Various new warnings to detect potentially buggy code with security implications&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Various improvements to GCOV&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;The sanitizers have been extended to detect more invalid cases&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Also, various warnings for the front ends have been added.  Some of the existing warnings have been extended. Diagnostic messages have been improved&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;New changes in the GCC 8 stable release over the GCC 7 series includes:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Intel Cannonlake support.  And GCC 8 also has initial targeting for Intel Icelake, Cannonlake&amp;#8217;s successor.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improved tuning for AMD Zen &amp;#8220;znver1&amp;#8221; microarchitecture.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;ARMv8.4-A support as well as now officially supporting the ARM Cortex-A55 and Cortex-A75 CPUs.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Qualcomm Saphira CPU support, Qualcomm&amp;#8217;s new ARM server CPU core.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Default to C17 for C code and on the C++ side is initial work towards C++2A.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Libstdc++ has improved experimental support for C++17 and experimental support for C++2A.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Preparations for Fortran 2018.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Various work around Spectre mitigation for different architectures.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Correct -march=native handling on ARM/AArch64.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Intel Cilk Plus support was dropped while separately Intel MPX (Memory Protection Extensions) was deprecated and will likely be dropped in GCC 9.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Developer Toolset 8 also includes updates for debugging, optimizing, and performance tools:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;binutils: 2.30&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;dwz:  0.12&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;elfutils: 0.174&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;oprofile: 1.3.0&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;systemtap: 3.3&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;valgrind: 3.14.0&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;dyninst: 9.3.2&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;strace: 4.24&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;memstomp:  0.1.5&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;ltrace: 0.7.91&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;make: 4.2.1&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Developer Toolset with GCC 8 runs on RHEL 6 (x86_64) and 7 (x86_64, ppc64, ppc64le, aarch64, s390x)&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;devtoolset-8&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container images: &lt;code&gt;rhscl-beta/devtoolset-8-toolchain-rhel7&lt;/code&gt; and &lt;code&gt;rhscl-beta/devtoolset-8-perftools-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;For more information:&lt;/b&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;The &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/developertoolset/hello-world/"&gt;&lt;span style="font-weight: 400;"&gt;quickest way to Hello World&lt;/span&gt;&lt;/a&gt;&lt;b&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;&lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Toolset pages&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt; &lt;p style="display: inline !important;"&gt;&lt;a href="https://access.redhat.com/support/policy/updates/rhscl"&gt;&lt;span style="font-weight: 400;"&gt;Life cycle document&lt;/span&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Toolset &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_toolset/"&gt;&lt;span style="font-weight: 400;"&gt;documentation&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;linkname=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fgcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7%2F&amp;#38;title=GCC%208%20and%20tools%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux%206%20and%207" data-a2a-url="https://developers.redhat.com/blog/2018/10/24/gcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7/" data-a2a-title="GCC 8 and tools now in beta for Red Hat Enterprise Linux 6 and 7"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/gcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7/"&gt;GCC 8 and tools now in beta for Red Hat Enterprise Linux 6 and 7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/kvhoIC1Va0I" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce the immediate availability of Red Hat Developer Toolset 8 beta for Red Hat Enterprise Linux 6 and 7.  The key new components for this release are: GCC 8.2.1 GDB 8.2 Updated components such as SystemTap, Valgrind, OProfile, and many more Like other tools, these are installable via yum from the [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/gcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7/"&gt;GCC 8 and tools now in beta for Red Hat Enterprise Linux 6 and 7&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/24/gcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">530727</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2018-10-24T15:00:40Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/24/gcc-8-and-tools-now-in-beta-for-red-hat-enterprise-linux-6-and-7/</feedburner:origLink></entry><entry><title>Clang/LLVM 6.0, Go 1.10, and Rust 1.29 now in beta for Red Hat Enterprise Linux</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/BBwlQrJwnDc/" /><category term="Announcement" /><category term="clang/LLVM" /><category term="Developer Tools" /><category term="Go" /><category term="Programming Languages" /><category term="Rust" /><category term="Clang/LLVM" /><category term="compilers" /><category term="go" /><category term="Golang" /><category term="Red Hat Software Collections" /><category term="rust-toolset" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=530747</id><updated>2018-10-24T13:00:31Z</updated><published>2018-10-24T13:00:31Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;We are pleased to announce the immediate availability of these three compiler toolsets now in beta for Red Hat Enterprise Linux 7.  Upon the GA release, these versions will become officially supported Red Hat offerings:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Clang/LLVM 6.0&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Go 1.10&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Rust 1.29&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;These toolsets can be installed from the Red Hat Enterprise Linux 7 Devtools channel.  See the &amp;#8220;New compiler details&amp;#8221; below to learn about the new features.&lt;/span&gt;&lt;span id="more-530747"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;About Red Hat compiler toolsets for Red Hat Enterprise Linux&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Twice a year, Red Hat distributes new versions of compiler toolsets, scripting languages, open source databases, and/or web tools providing application developers with access to the latest, stable versions. These Red Hat supported offerings are packaged as&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Red Hat Software Collections&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (scripting languages, open source databases, web tools, etc.), &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Toolset&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (GCC), and the recently added compiler toolsets&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Clang/LLVM, Go, and Rust&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. All are &lt;code&gt;yum&lt;/code&gt; installable, and are included in all Red Hat Enterprise Linux Developer Subscriptions and most Red Hat Enterprise Linux subscriptions. Most components are also available as Linux container images for hybrid cloud development across Red Hat platforms including: Red Hat Enterprise Linux, Red Hat OpenShift, Red Hat OpenStack, etc.&lt;/span&gt;&lt;b&gt;Compiler Toolsets details&lt;/b&gt;&lt;/p&gt; &lt;h2&gt;&lt;/h2&gt; &lt;h2&gt;&lt;b&gt;New compiler details&lt;/b&gt;&lt;/h2&gt; &lt;h3&gt;&lt;b&gt;Rust 1.29&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Rust is an open-source systems programming language created by Mozilla and a community of volunteers, designed to help developers create fast, secure applications which take full advantage of the powerful features of modern multi-core processors. It prevents segmentation faults and guarantees thread safety, all with an easy-to-learn syntax.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;In addition, Rust offers zero-cost abstractions, move semantics, guaranteed memory safety, threads with no data races, trait-based generics, pattern matching, type inference, and efficient C bindings, with a minimum runtime size.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Cargo is Rust’s package manager and build tool.  It allows Rust projects to declare dependencies with specific version requirement. Cargo will resolve the full dependency graph, download packages as needed, and build and test the entire project.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The following components are included in this release:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;rust-toolset-1.29&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;rust-toolset-1.29-cargo 1.28&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Container image: devtools-beta/rust-toolset-1.29-rhel7&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Rust 1.29 runs on RHEL 7 (x86_64, Power LE, aarch64,S390x)&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Clang/LLVM 6.0&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This release is based on LLVM version 6  and will become the first fully supported version upon its general availability.  &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The LLVM Project is a collection of modular and reusable compiler and toolchain technologies. The LLVM Core libraries provide a modern source- and target-independent optimizer, along with code generation support for the RHEL CPU architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Clang is an &amp;#8220;LLVM native&amp;#8221; C/C++/Objective-C compiler, which aims to deliver amazingly fast compiles, extremely useful error and warning messages and to provide a platform for building great source level tools. The Clang Static Analyzer is a tool that automatically finds bugs in your code, and is a great example of the sort of tool that can be built using the Clang frontend as a library to parse C/C++ code.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The following components are included in this release:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;llvm-toolset-6.0-llvm-6.0.1&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Llvm-toolset-6.0-clang-6.0.1&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Container image: devtools-beta/llvm-toolset-6.0-rhel7&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Clang/LLVM 6.0 runs on RHEL 7 (x86_64, Power LE, aarch64,S390x)&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Golang 1.10&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This Go toolset is based on Golang 1.10 and will become the first fully supported version upon its general availability.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Go is expressive, concise, clean, and efficient. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It&amp;#8217;s a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;The following components are included in this release:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;go-toolset-1.10&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Go-toolset-1.10-golang-1.10&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Container image: devtools-beta/go-toolset-1.10-rhel7 &lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Golang 1.10 runs on RHEL 7 (x86_64, Power LE, aarch64,S390x)&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;For more information:&lt;/b&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;b&gt;&lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/hello-world"&gt;&lt;span style="font-weight: 400;"&gt;Getting to Hello World w/ these compilers&lt;/span&gt;&lt;/a&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Tools &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_developer_tools"&gt;&lt;span style="font-weight: 400;"&gt;documentation&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;linkname=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fclang-llvm-6-0-go-1-10-rust-1-29-beta-rhel%2F&amp;#38;title=Clang%2FLLVM%206.0%2C%20Go%201.10%2C%20and%20Rust%201.29%20now%20in%20beta%20for%20Red%20Hat%20Enterprise%20Linux" data-a2a-url="https://developers.redhat.com/blog/2018/10/24/clang-llvm-6-0-go-1-10-rust-1-29-beta-rhel/" data-a2a-title="Clang/LLVM 6.0, Go 1.10, and Rust 1.29 now in beta for Red Hat Enterprise Linux"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/clang-llvm-6-0-go-1-10-rust-1-29-beta-rhel/"&gt;Clang/LLVM 6.0, Go 1.10, and Rust 1.29 now in beta for Red Hat Enterprise Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/BBwlQrJwnDc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce the immediate availability of these three compiler toolsets now in beta for Red Hat Enterprise Linux 7.  Upon the GA release, these versions will become officially supported Red Hat offerings: Clang/LLVM 6.0 Go 1.10 Rust 1.29 These toolsets can be installed from the Red Hat Enterprise Linux 7 Devtools channel. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/clang-llvm-6-0-go-1-10-rust-1-29-beta-rhel/"&gt;Clang/LLVM 6.0, Go 1.10, and Rust 1.29 now in beta for Red Hat Enterprise Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/24/clang-llvm-6-0-go-1-10-rust-1-29-beta-rhel/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">530747</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2018-10-24T13:00:31Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/24/clang-llvm-6-0-go-1-10-rust-1-29-beta-rhel/</feedburner:origLink></entry><entry><title>Newest PHP, Varnish Cache, MySQL, NGINX, Node.js, and Git now in beta</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Q-Nf_h1Cz4Q/" /><category term="Announcement" /><category term="Developer Tools" /><category term="Node.js" /><category term="PHP" /><category term="Red Hat Enterprise Linux" /><category term="Red Hat Software Collections" /><category term="Apache http" /><category term="git" /><category term="mysql" /><category term="nginx" /><category term="php" /><category term="RHSCL" /><category term="varnish" /><author><name>Mike Guerette</name></author><id>https://developers.redhat.com/blog/?p=530687</id><updated>2018-10-24T11:00:57Z</updated><published>2018-10-24T11:00:57Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400;"&gt;We are pleased to announce the immediate availability &lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;Red Hat Software Collections&lt;/a&gt; 3.2 beta, which adds these components to &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/rhel/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Enterprise Linux 7&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;PHP 7.2&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Varnish Cache 6.0 &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;MySQL 8.0 &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;NGINX 1.14 &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Node.js 10&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Git 2.18&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Update of Apache HTTP server 2.4&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;These beta versions are available on Red Hat Enterprise Linux 7 (Devtools or RHSCL channel) for x86_64, s390x, aarch64, and ppc64le.  Read more details about each component in the &amp;#8220;New Components details&amp;#8221; section.&lt;/span&gt;&lt;span id="more-530687"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;About Red Hat Software Collections&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Twice a year, Red Hat distributes new versions of compiler toolsets, scripting languages, open source databases, and/or web tools providing application developers with access to the latest, stable versions. These Red Hat supported offerings are packaged as&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Red Hat Software Collections&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (scripting languages, open source databases, web tools, etc.), &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Developer Toolset&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; (GCC), and the recently added compiler toolsets&lt;/span&gt;&lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview/"&gt;&lt;span style="font-weight: 400;"&gt; Clang/LLVM, Go, and Rust&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. All are &lt;code&gt;yum&lt;/code&gt; installable, and are included in all Red Hat Enterprise Linux Developer Subscriptions and most Red Hat Enterprise Linux subscriptions. Most components are also available as Linux container images for hybrid cloud development across Red Hat platforms including: Red Hat Enterprise Linux, Red Hat OpenShift, Red Hat OpenStack, etc.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;New Components details&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;h3&gt;&lt;b&gt;PHP 7.2 &lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;This PHP 7.2 addition marks the second feature update to the PHP 7 series where performance is considerably improved; it comes with numerous improvements and new features:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Convert numeric keys in object/array casts&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Counting of non-countable objects&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Object typehint&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;HashContext as Object&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Improve TLS constants to sane values&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;PHP 7.2 works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-php72&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container image: &lt;code&gt;rhscl-beta/php-72-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Varnish Cache 6.0&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Varnish Cache 6.0 is a web application accelerator also known as a caching HTTP reverse proxy. It is installed in front of a web server that speaks HTTP and configured to cache the contents, has very high performance, and has a highly extensible built-in configuration language. Varnish 6.0 new features include:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;HTTP/2 support &amp;#8211; following an extended testing period, Varnish 6.0 now fully supports HTTP/2.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Support for Unix Domain Sockets (UDS), both for clients and for back-end servers &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;A new level of the Varnish Configuration Language (VCL), vcl 4.1 &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;New and improved Varnish Modules (VMODs): vmod_directors, vmod_proxy, vmod_unix, vmod_vtc&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Varnish Cache works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-varnish6&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container image: &lt;code&gt;rhscl-beta/varnish-6-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;MySQL 8.0&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;MySQL 8.0 delivers across-the-board improvements designed to enable DBAs and developers to create and deploy the next generation of web, embedded, mobile and Cloud/SaaS/PaaS/DBaaS applications on the latest generation of development frameworks and hardware platforms.  &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;MySQL 8.0 highlights include:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Transactional Data Dictionary&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;SQL Roles&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Default to utf8mb4&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Common Table Expressions&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Window Functions&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;MySQL 8.0 works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-mysql80&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container image: &lt;code&gt;rhscl-beta/mysql-80-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;NGINX 1.14&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;NGINX 1.14.0 is the latest stable release for the project and includes a new mirror module for mirroring requests, HTTP/2 push support and limits the number of concurrent push requests, and a gRPC proxy module for passing requests onward to a gRPC server. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;NGINX 1.14 works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-nginx114&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container image: &lt;code&gt;rhscl-beta/nginx-114-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Node.js 10&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Node.js is a modern programming platform built on a JavaScript runtime for easily building fast, scalable network applications. Node.js uses an event-driven, non-blocking I/O model that makes it lightweight and efficient, perfect for data-intensive real-time applications that run across distributed devices. Other features in the Node.js 10 release include:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Enhanced security.  &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;N-API (Node.js API), which moves from beta to a stable version, and provides a stable module API independent of changes in the V8 JavaScript engine underlying Node.js. The API helps module maintainers and production deployments, making upgrades easier.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;JavaScript language improvements, including prototype.toString(), which now returns exact slices of source code text, and mitigations for side-channel vulnerabilities to prevent information leaks.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Error-handling improvements, with adoption of error codes to ease constant error-checking.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Performance boosts via V8, including for the async generator and array.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Increased visibility into code performance issues via trace events, with the Node.js 10 release.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;An API in the Node.js 10 release allows user code to enable and disable trace events on demand at runtime, for improved flexibility in diagnosing issues in applications.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Node.js 10 works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-nodejs10&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Git 2.18&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Git is an open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git includes features such as cheap local branching, convenient staging areas and multiple workflows that are not available in other version control systems.  Git allows and encourages developers to have multiple local branches that can be entirely independent of each other. The creation, merging, and deletion of those lines of development takes only seconds which is much faster than other Source Code Management systems. Git 2.18 features are:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;The most significant feature in Git 2.18 is the introduction of its new wire protocol v2 that is designed to offer much greater performance. This new protocol is designed to be much faster and is already being used due to the significant performance benefits.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Git Large File Storage (LFS) replaces large files with text pointers inside Git and stores the file contents on a remote server.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;The other Git 2.18 changes are mostly a wide assortment of other routine updates, bug fixes, and improvements including various other performance optimizations. &lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Git 2.18 works on RHEL 7, all architectures.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Package name: &lt;code&gt;rh-git218&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;This component has been updated in Red Hat Software Collections 3.2&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;h3&gt;&lt;b&gt;Update to Apache HTTP Server 2.4&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Apache HTTP is a project of the Apache Software Foundation and is the number one http server on the internet. Updates to this Apache HTTP Server version 2.4 include:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Support for OpenSSL 1.0.2 and includes mod_md module. &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;For existing Apache 2.2.x users, migrating to 2.4 is quite easy as there are minimal configuration changes.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;span style="font-weight: 400;"&gt;Using Apache 2.4, web developers can achieve the performance of other “fast” web servers without having to switch to newer webservers such as Nginx.&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Apache HTTP Server 2.4 works on RHEL 7, all architectures, and RHEL 6.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;It is still packaged as &lt;code&gt;httpd24&lt;/code&gt;.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;Container image: &lt;code&gt;rhscl-beta/httpd-24-rhel7&lt;/code&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;&lt;i&gt;For more information:&lt;/i&gt;&lt;/b&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;span style="font-weight: 400;"&gt;The &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/hello-world/"&gt;&lt;span style="font-weight: 400;"&gt;quickest way to Hello World&lt;/span&gt;&lt;/a&gt; using Red Hat Enterprise Linux&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;b&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;&lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Software Collections&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;. &lt;/span&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;&lt;b&gt;&lt;span style="font-weight: 400;"&gt;Find all of the older versions of components &lt;/span&gt;&lt;a href="https://access.redhat.com/support/policy/updates/rhscl"&gt;&lt;span style="font-weight: 400;"&gt;here&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt;.&lt;/span&gt;&lt;/b&gt;&lt;/li&gt; &lt;li&gt;Red Hat Software Collections &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_software_collections/"&gt;documentation&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;linkname=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F24%2Fnewest-php-varnish-cache-mysql-nginx-node-js-git-beta%2F&amp;#38;title=Newest%20PHP%2C%20Varnish%20Cache%2C%20MySQL%2C%20NGINX%2C%20Node.js%2C%20and%20Git%20now%20in%20beta" data-a2a-url="https://developers.redhat.com/blog/2018/10/24/newest-php-varnish-cache-mysql-nginx-node-js-git-beta/" data-a2a-title="Newest PHP, Varnish Cache, MySQL, NGINX, Node.js, and Git now in beta"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/newest-php-varnish-cache-mysql-nginx-node-js-git-beta/"&gt;Newest PHP, Varnish Cache, MySQL, NGINX, Node.js, and Git now in beta&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Q-Nf_h1Cz4Q" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;We are pleased to announce the immediate availability Red Hat Software Collections 3.2 beta, which adds these components to Red Hat Enterprise Linux 7: PHP 7.2 Varnish Cache 6.0 MySQL 8.0 NGINX 1.14 Node.js 10 Git 2.18 Update of Apache HTTP server 2.4 These beta versions are available on Red Hat Enterprise Linux 7 (Devtools or [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/24/newest-php-varnish-cache-mysql-nginx-node-js-git-beta/"&gt;Newest PHP, Varnish Cache, MySQL, NGINX, Node.js, and Git now in beta&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/24/newest-php-varnish-cache-mysql-nginx-node-js-git-beta/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">530687</post-id><dc:creator>Mike Guerette</dc:creator><dc:date>2018-10-24T11:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/24/newest-php-varnish-cache-mysql-nginx-node-js-git-beta/</feedburner:origLink></entry><entry><title>Modern web applications on OpenShift: Part 2 — Using chained builds</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/44FW6timNqM/" /><category term="JavaScript" /><category term="Modern App Dev" /><category term="Node.js" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Red Hat OpenShift Container Platform" /><category term="angular" /><category term="Javascript" /><category term="nodejs" /><category term="react" /><category term="S2I" /><category term="source-to-image" /><author><name>Lucas Holmquist</name></author><id>https://developers.redhat.com/blog/?p=522057</id><updated>2018-10-23T15:00:16Z</updated><published>2018-10-23T15:00:16Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2018/10/04/modern-web-apps-openshift-part-1/"&gt;In the previous post&lt;/a&gt;, we took a quick look at a new source-to-image (S2I) builder image designed for building and deploying modern web applications on &lt;a href="http://openshift.com/"&gt;OpenShift&lt;/a&gt;. While the last post was focused on getting your app deployed quickly, this post will look at how to use the S2I image as a &amp;#8220;pure&amp;#8221; builder image and combine it with an OpenShift c&lt;em&gt;hained build&lt;/em&gt;.&lt;/p&gt; &lt;p&gt;&lt;span id="more-522057"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Pure builder image&lt;/h2&gt; &lt;p&gt;As mentioned in the previous post, most modern web apps now have a build step. Common workflows done in the build step are things like transpiling your code, concatenating multiple files, and minifying. Once these workflows are done, the resulting files, which are static HTML, JavaScript, and CSS, are put into an output folder. The location of the folder usually depends on the build tools you are using, but for something like React, the location is &lt;code&gt;./build&lt;/code&gt; (more on this location in a minute).&lt;/p&gt; &lt;h3&gt;Source-to-Image (S2I)&lt;/h3&gt; &lt;p&gt;This post isn&amp;#8217;t going to go into the &amp;#8220;what and how&amp;#8221; of S2I; you can &lt;a href="https://docs.okd.io/latest/architecture/core_concepts/builds_and_image_streams.html#source-build"&gt;read more here&lt;/a&gt;, but we should understand two of the phases that happen in order to better understand what the Web App Builder image is doing.&lt;/p&gt; &lt;h4&gt;Assemble phase&lt;/h4&gt; &lt;p&gt;The assemble phase is very similar to what happens when running &lt;code&gt;docker build&lt;/code&gt;. The result of this phase will be a new Docker image. This phase also happens when a build is run on OpenShift.&lt;/p&gt; &lt;p&gt;For the Web App Builder image, the &lt;a href="https://github.com/bucharest-gold/centos7-s2i-web-app/blob/master/s2i/assemble#L47"&gt;assemble script&lt;/a&gt; is responsible for installing your app&amp;#8217;s dependencies and running your build. By default, the builder image will use &lt;code&gt;npm run build&lt;/code&gt;, but that can be overridden by providing an &lt;code&gt;NPM_BUILD&lt;/code&gt; environment variable.&lt;/p&gt; &lt;p&gt;As I said before, the location of your &amp;#8220;built&amp;#8221; app depends on the build tools you are using. For example, React uses &lt;code&gt;./build&lt;/code&gt;, but an Angular app uses &lt;code&gt;project_name/dist&lt;/code&gt;. And, as you saw in the previous post, this output directory, which defaults to &lt;code&gt;build&lt;/code&gt;, can be overridden using the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; environment variable. Since there are differences in output locations between frameworks, you copy the generated output into a common directory inside the image, &lt;code&gt;/opt/apt-root/output&lt;/code&gt;. This will be important further down this post, but first let&amp;#8217;s take a quick look at the next phase, the run phase.&lt;/p&gt; &lt;h4&gt;Run phase&lt;/h4&gt; &lt;p&gt;This phase is run when &lt;code&gt;docker run&lt;/code&gt; is called on the newly created image from the assemble phase. This is also what is run during an OpenShift deployment. By default, the &lt;a href="https://github.com/bucharest-gold/centos7-s2i-web-app/blob/master/s2i/run"&gt;run script&lt;/a&gt; will use the &lt;a href="https://www.npmjs.com/package/serve"&gt;serve module&lt;/a&gt; to serve the static content located in the common output directory mentioned above.&lt;/p&gt; &lt;p&gt;While this works for getting your app deployed quickly, it is not really the recommended way of serving static content. Since we are really serving only static content, we don&amp;#8217;t really even need Node.js installed in our image. We just need a web server.&lt;/p&gt; &lt;p&gt;This situation—where our building needs are different from our runtime needs—is where chained builds can help.&lt;/p&gt; &lt;h2&gt;Chained builds&lt;/h2&gt; &lt;p&gt;To quote the official OpenShift documentation on &lt;a href="https://docs.okd.io/latest/dev_guide/builds/advanced_build_operations.html#dev-guide-chaining-builds"&gt;chained builds&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&amp;#8220;Two builds can be chained together: one that produces the compiled artifact, and a second build that places that artifact in a separate image that runs the artifact.&amp;#8221;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;What this means is that we can use the Web App Builder image to run our build, and then we can use a web server image, like NGINX, to serve our content.&lt;/p&gt; &lt;p&gt;This allows us to use the Web App Builder image as a &amp;#8220;pure&amp;#8221; builder and also keep our runtime image small.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at an example to see how this all comes together.&lt;/p&gt; &lt;p&gt;This &lt;a href="https://github.com/lholmquist/react-web-app"&gt;example app&lt;/a&gt;, is a basic React application created using the &lt;code&gt;create-react-app&lt;/code&gt; CLI tool.&lt;/p&gt; &lt;p&gt;I&amp;#8217;ve added an &lt;a href="https://github.com/lholmquist/react-web-app/blob/master/.openshiftio/application.yaml"&gt;OpenShift template file&lt;/a&gt; to piece everything together.&lt;/p&gt; &lt;p&gt;Let&amp;#8217;s take a look at some of the more important parts of this file.&lt;/p&gt; &lt;pre&gt;parameters: - name: SOURCE_REPOSITORY_URL description: The source URL for the application displayName: Source URL required: true - name: SOURCE_REPOSITORY_REF description: The branch name for the application displayName: Source Branch value: master required: true - name: SOURCE_REPOSITORY_DIR description: The location within the source repo of the application displayName: Source Directory value: . required: true - name: OUTPUT_DIR description: The location of the compiled static files from your web apps builder displayName: Output Directory value: build required: false &lt;/pre&gt; &lt;p&gt;The parameter section should be pretty self-explanatory, but I want to call out the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; parameter. For our React example, we don&amp;#8217;t need to worry about it, since the default value is what React uses, but if you are using Angular or something else, you could change it.&lt;/p&gt; &lt;p&gt;Now let&amp;#8217;s take a look at the image streams.&lt;/p&gt; &lt;pre&gt;- apiVersion: v1 kind: ImageStream metadata: name: react-web-app-builder // 1 spec: {} - apiVersion: v1 kind: ImageStream metadata: name: react-web-app-runtime // 2 spec: {} - apiVersion: v1 kind: ImageStream metadata: name: web-app-builder-runtime // 3 spec: tags: - name: latest from: kind: DockerImage name: bucharestgold/centos7-s2i-web-app:10.x - apiVersion: v1 kind: ImageStream metadata: name: nginx-image-runtime // 4 spec: tags: - name: latest from: kind: DockerImage name: 'centos/nginx-112-centos7:latest' &lt;/pre&gt; &lt;p&gt;First, let&amp;#8217;s take a look at the third and fourth images. We can see that both are defined as Docker images, and we can see where they come from.&lt;/p&gt; &lt;p&gt;The third is the &lt;code&gt;web-app-builder&lt;/code&gt; image, &lt;code&gt;bucharestgold/centos7-s2i-web-app&lt;/code&gt;, which is using the 10.x tag from the &lt;a href="https://hub.docker.com/r/bucharestgold/centos7-s2i-web-app/"&gt;Docker hub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The fourth is an NGINX image (version 1.12) using the latest tag from the &lt;a href="https://hub.docker.com/r/centos/nginx-112-centos7/"&gt;Docker hub&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Now let&amp;#8217;s take a look at those first two images. Both images are empty to start. These images will be created during the build phase, but for completeness, let me explain what will go into each one.&lt;/p&gt; &lt;p&gt;The first image, &lt;code&gt;react-web-app-builder&lt;/code&gt;, will be the result of the &amp;#8220;assemble&amp;#8221; phase of the &lt;code&gt;web-app-builder-runtime&lt;/code&gt; image once it is combined with our source code. That is why I&amp;#8217;ve named it &amp;#8220;&lt;code&gt;-builder&lt;/code&gt;.&amp;#8221;&lt;/p&gt; &lt;p&gt;The second image, &lt;code&gt;react-web-app-runtime&lt;/code&gt;, will be the result of combining the &lt;code&gt;nginx-image-runtime&lt;/code&gt; with the some of the files from the &lt;code&gt;react-web-app-builder&lt;/code&gt; image. This image will also be the image that is &amp;#8220;deployed&amp;#8221; and will contain only the web server and the static HTML, JavaScript, and CSS for the application.&lt;/p&gt; &lt;p&gt;This might sound a little confusing now, but once we look at the build configurations, things should be a little more clear.&lt;/p&gt; &lt;p&gt;In this template, there are two build configurations. Let&amp;#8217;s take a look at them one at a time.&lt;/p&gt; &lt;pre&gt; apiVersion: v1 kind: BuildConfig metadata: name: react-web-app-builder spec: output: to: kind: ImageStreamTag name: react-web-app-builder:latest // 1 source: // 2 git: uri: ${SOURCE_REPOSITORY_URL} ref: ${SOURCE_REPOSITORY_REF} contextDir: ${SOURCE_REPOSITORY_DIR} type: Git strategy: sourceStrategy: env: - name: OUTPUT_DIR // 3 value: ${OUTPUT_DIR} from: kind: ImageStreamTag name: web-app-builder-runtime:latest // 4 incremental: true // 5 type: Source triggers: // 6 - github: secret: ${GITHUB_WEBHOOK_SECRET} type: GitHub - type: ConfigChange - imageChange: {} type: ImageChange &lt;/pre&gt; &lt;p&gt;The first one, &lt;code&gt;react-web-app-builder&lt;/code&gt; above, is pretty standard. We see that line 1 tells us the result of this build will be put into the &lt;code&gt;react-web-app-builder&lt;/code&gt; image, which we saw when we took a look at the image stream list above.&lt;/p&gt; &lt;p&gt;Next, line 2 is just telling us where the code is coming from. In this case, it is a git repository, and the location, &lt;code&gt;ref&lt;/code&gt;, and context directory are defined by the parameters we saw earlier.&lt;/p&gt; &lt;p&gt;Again, line 3, we saw in the &lt;code&gt;parameters&lt;/code&gt; section. This will add the &lt;code&gt;OUTPUT_DIR&lt;/code&gt; environment variable, which in our example will be &lt;code&gt;build&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Line 4 is just telling us to use the &lt;code&gt;web-app-builder-runtime&lt;/code&gt; image that we saw in the &lt;code&gt;ImageStream&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;Line 5 is saying we want to use an incremental build if the S2I image supports it. The Web App Builder image does support it. On the first run, once the assemble phase is complete, the image will save the &lt;code&gt;node_modules&lt;/code&gt; folder into an archive file. Then on subsequent runs, the image will un-archive that &lt;code&gt;node_modules&lt;/code&gt; folder, which will speed up build times.&lt;/p&gt; &lt;p&gt;The last thing to call out, line 6, is just a few triggers that are set up, so when something changes, this build can be kicked off without manual interaction.&lt;/p&gt; &lt;p&gt;As I said before, this is a pretty standard build configuration. Now let&amp;#8217;s take a look at the second build configuration. Most of it is very similar to the first, but there is one important difference:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 kind: BuildConfig metadata: name: react-web-app-runtime spec: output: to: kind: ImageStreamTag name: react-web-app-runtime:latest // 1 source: // 2 type: Image images: - from: kind: ImageStreamTag name: react-web-app-builder:latest // 3 paths: - sourcePath: /opt/app-root/output/. // 4 destinationDir: . // 5 strategy: // 6 sourceStrategy: from: kind: ImageStreamTag name: nginx-image-runtime:latest incremental: true type: Source triggers: - github: secret: ${GITHUB_WEBHOOK_SECRET} type: GitHub - type: ConfigChange - type: ImageChange imageChange: {} - type: ImageChange imageChange: from: kind: ImageStreamTag name: react-web-app-builder:latest // 7 &lt;/pre&gt; &lt;p&gt;This second build configuration, &lt;code&gt;react-web-app-runtime&lt;/code&gt;, starts off in a fairly standard way.&lt;/p&gt; &lt;p&gt;Line 1 isn&amp;#8217;t anything new. It is telling us that the result of this build will be put into the &lt;code&gt;react-web-app-runtime&lt;/code&gt; image.&lt;/p&gt; &lt;p&gt;As with the first build configuration, we have a source section, line 2, but this time we say our source is coming from an image. The image that it is coming from is the one we just created, &lt;code&gt;react-web-app-builder&lt;/code&gt; (specified in line 3). The files we want to use are located inside the image and that location is specified in line 4: &lt;code&gt;/opt/app-root/output/&lt;/code&gt;. If you remember, this is where our generated files from our app&amp;#8217;s build step ended up.&lt;/p&gt; &lt;p&gt;The destination directory, specified in line 5, is just the current directory (this is all happening inside some magic OpenShift thing, not on your local computer).&lt;/p&gt; &lt;p&gt;The strategy section, line 6, is also similar to the first build configuration. This time, we are going to use the &lt;code&gt;nginx-image-runtime&lt;/code&gt; that we looked at in the &lt;code&gt;ImageStream&lt;/code&gt; section.&lt;/p&gt; &lt;p&gt;The final thing to point out is the trigger section, line 7, which will trigger this build anytime the &lt;code&gt;react-web-app-builder&lt;/code&gt; image changes.&lt;/p&gt; &lt;p&gt;The rest of the template is fairly standard deployment configuration, service, and route stuff, which we don&amp;#8217;t need to go into. Note that the image that will be deployed will be the &lt;code&gt;react-web-app-runtime&lt;/code&gt; image.&lt;/p&gt; &lt;h2&gt;Deploying the application&lt;/h2&gt; &lt;p&gt;Now that we&amp;#8217;ve taken a look at the template, let&amp;#8217;s see how we can easily deploy this application.&lt;/p&gt; &lt;p&gt;We can use the OpenShift Client tool &lt;code&gt;oc&lt;/code&gt; to deploy our template:&lt;/p&gt; &lt;pre&gt;$ find . | grep openshiftio | grep application | xargs -n 1 oc apply -f $ oc new-app --template react-web-app -p SOURCE_REPOSITORY_URL=https://github.com/lholmquist/react-web-app &lt;/pre&gt; &lt;p&gt;The first command above is just an overly engineered way of finding the &lt;code&gt;./openshiftio/application.yaml&lt;/code&gt; template.&lt;/p&gt; &lt;p&gt;The second creates a new application based on that template.&lt;/p&gt; &lt;p&gt;Once those commands are run, we can see that there are two builds:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2.png"&gt;&lt;img class=" aligncenter wp-image-526067 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2-1024x521.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2-1024x521.png" alt="Screen showing the two builds" width="640" height="326" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2-1024x521.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2-300x153.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-build-2-768x391.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Back on the Overview screen, we should see the running pod:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview.png"&gt;&lt;img class=" aligncenter wp-image-526077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview-1024x513.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview-1024x513.png" alt="Screen showing the running pod" width="640" height="321" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview-1024x513.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview-300x150.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-overview-768x385.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Clicking the link should navigate to our application, which is the default React App page:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web.png"&gt;&lt;img class=" aligncenter wp-image-526087 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web-1024x487.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web-1024x487.png" alt="Screen that is displayed after navigating to the app" width="640" height="304" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web-1024x487.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web-300x143.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web-768x365.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/react-web-app-web.png 1326w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;Extra Credit&lt;/h2&gt; &lt;p&gt;For those who are into using Angular, here is an &lt;a href="https://github.com/lholmquist/angular-web-app"&gt;example of that&lt;/a&gt;.&lt;br /&gt; The template is mostly the same, except for that &lt;code&gt;OUTPUT_DIR&lt;/code&gt; variable.&lt;/p&gt; &lt;h2&gt;Extra Extra Credit&lt;/h2&gt; &lt;p&gt;This post showed how to use the NGINX image as our web server, but it&amp;#8217;s fairly easy to swap that out if you wanted to use an Apache server. It can actually be done in one or maybe two (for completeness) steps.&lt;/p&gt; &lt;p&gt;All you need to do is in the template file, swap out the &lt;a href="https://github.com/lholmquist/react-web-app/blob/master/.openshiftio/application.yaml#L66"&gt;NGINX image&lt;/a&gt; for the &lt;a href="https://hub.docker.com/r/centos/httpd-24-centos7/"&gt;Apache image&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Summary&lt;/h2&gt; &lt;p&gt;While the first post in this series showed how to quickly get a modern web application on OpenShift, this post went deeper into what the Web App Builder image is doing and how to combine it, using a chained build, with a pure web server such as NGINX for a more production-ready build.&lt;/p&gt; &lt;p&gt;In the next and final (probably) post, we will take a look at how to run our web application&amp;#8217;s development server on OpenShift, while keeping our local and remote files in sync.&lt;/p&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/books/deploying-openshift/"&gt;Deploying to OpenShift: a guide for impatient developers&lt;/a&gt; &amp;#8211; free ebook&lt;/li&gt; &lt;li&gt;Information on &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;OpenShift and Kubernetes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;linkname=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F23%2Fmodern-web-applications-on-openshift-part-2-using-chained-builds%2F&amp;#38;title=Modern%20web%20applications%20on%20OpenShift%3A%20Part%202%20%E2%80%94%20Using%20chained%20builds" data-a2a-url="https://developers.redhat.com/blog/2018/10/23/modern-web-applications-on-openshift-part-2-using-chained-builds/" data-a2a-title="Modern web applications on OpenShift: Part 2 — Using chained builds"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/23/modern-web-applications-on-openshift-part-2-using-chained-builds/"&gt;Modern web applications on OpenShift: Part 2 &amp;#8212; Using chained builds&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/44FW6timNqM" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In the previous post, we took a quick look at a new source-to-image (S2I) builder image designed for building and deploying modern web applications on OpenShift. While the last post was focused on getting your app deployed quickly, this post will look at how to use the S2I image as a &amp;#8220;pure&amp;#8221; builder image and [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/23/modern-web-applications-on-openshift-part-2-using-chained-builds/"&gt;Modern web applications on OpenShift: Part 2 &amp;#8212; Using chained builds&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/23/modern-web-applications-on-openshift-part-2-using-chained-builds/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">522057</post-id><dc:creator>Lucas Holmquist</dc:creator><dc:date>2018-10-23T15:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/23/modern-web-applications-on-openshift-part-2-using-chained-builds/</feedburner:origLink></entry><entry><title>All Things Open 2018 - Lightning Talk on How To Jump Start a Career in Open Source (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9W0kG94qvTI/all-things-open-2018-lightning-talk-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="xpaas" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-all_things_open_2018_lightning_talk_on_how_to_jump_start_a_career_in_open_source_slides</id><updated>2018-10-23T05:00:14Z</updated><published>2018-10-23T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;/div&gt;&lt;a href="https://4.bp.blogspot.com/-QbBdIvvbiMQ/W8XsxbzP5cI/AAAAAAAAtO0/0jxO5kPqfE0l00-kwZ_UKlONsJXpnjTUwCLcBGAs/s1600/Screen%2BShot%2B2018-10-16%2Bat%2B15.50.43.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="all things open" border="0" data-original-height="428" data-original-width="827" height="165" src="https://4.bp.blogspot.com/-QbBdIvvbiMQ/W8XsxbzP5cI/AAAAAAAAtO0/0jxO5kPqfE0l00-kwZ_UKlONsJXpnjTUwCLcBGAs/s320/Screen%2BShot%2B2018-10-16%2Bat%2B15.50.43.png" title="" width="320" /&gt;&lt;/a&gt;This week I was in Raleigh, North Carolina from Oct 21-23 speaking at All Things Open.&lt;br /&gt;&lt;br /&gt;I &lt;a href="http://www.schabell.org/2018/10/all-things-open-2018-lightning-talk.html" target="_blank"&gt;gave a lightning talk&lt;/a&gt; on how to jump start a career in open source, in just 6 minutes.&lt;br /&gt;&lt;br /&gt;The topic is near and dear to my heart, so as a lightning talk it was fun to promote the full session I gave earlier this Summer in one of the most amazing venues I've ever spoken at.&lt;br /&gt;&lt;br /&gt;The talk includes links to the recording of that venue and the complete story I told. The only thing missing are the slides, which you'll find here.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/2Ay6VIduPAa2XH" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;br /&gt;For completeness, here is the original abstract:&lt;br /&gt;&lt;h3&gt;&lt;a href="https://opensource.com/article/18/10/lightning-talks-all-things-open#3" target="_blank"&gt;Lightning Talk - How to Jump Start a Career in Open Source&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;It's not magic. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;i&gt;Date: Tuesday, OCT 23&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Time: 12:45 PM, local time&lt;/i&gt;&lt;br /&gt;&lt;i&gt;Room: main stage in Ballroom B on 4th floor of the Raleigh Convention Center.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;All lightning talks will be recorded for future playback on the Opensource.com YouTube channel. Live stream will not be available for this event.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Hope to &lt;a href="https://allthingsopen.org/speakers/eric-d-schabell/" target="_blank"&gt;see you there&lt;/a&gt;!&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1G0dE2jmVCQ:WI4uuqZ5MBs:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1G0dE2jmVCQ:WI4uuqZ5MBs:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1G0dE2jmVCQ:WI4uuqZ5MBs:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1G0dE2jmVCQ:WI4uuqZ5MBs:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1G0dE2jmVCQ:WI4uuqZ5MBs:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1G0dE2jmVCQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9W0kG94qvTI" height="1" width="1" alt=""/&gt;</content><summary>This week I was in Raleigh, North Carolina from Oct 21-23 speaking at All Things Open. I gave a lightning talk on how to jump start a career in open source, in just 6 minutes. The topic is near and dear to my heart, so as a lightning talk it was fun to promote the full session I gave earlier this Summer in one of the most amazing venues I've ever spoken at. The talk includes links to the recording...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-10-23T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1G0dE2jmVCQ/all-things-open-2018-lightning-talk-slides.html</feedburner:origLink></entry><entry><title>Introduction to Linux interfaces for virtual networking</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PIiEiMOAcpc/" /><category term="Community" /><category term="Red Hat Enterprise Linux" /><category term="bonded interface" /><category term="Bridge" /><category term="dummy interface" /><category term="ifb" /><category term="ipoib" /><category term="ipvlan" /><category term="ipvtap" /><category term="Linux" /><category term="macsec" /><category term="macvlan" /><category term="macvtap" /><category term="network function virtualization" /><category term="NFV" /><category term="nlmon" /><category term="RHEL" /><category term="team device" /><category term="vcan" /><category term="veth" /><category term="virtual interface" /><category term="virtual networking" /><category term="Vlan" /><category term="vxcan" /><category term="vxlan" /><author><name>Hangbin Liu</name></author><id>https://developers.redhat.com/blog/?p=525757</id><updated>2018-10-22T19:35:05Z</updated><published>2018-10-22T19:35:05Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/topics/linux/"&gt;Linux&lt;/a&gt; has rich virtual networking capabilities that are used as basis for hosting VMs and &lt;a href="https://developers.redhat.com/blog/category/containers/"&gt;containers&lt;/a&gt;, as well as cloud environments. In this post, I will give a brief introduction to all commonly used virtual network interface types. There is no code analysis, only a brief introduction to the interfaces and their usage on Linux. Anyone with a network background might be interested in this blog post. A list of interfaces can be obtained using the command &lt;code&gt;ip link help&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;This post covers the following frequently used interfaces and some interfaces that can be easily confused with one another:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#bridge"&gt;Bridge&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#bonded"&gt;Bonded interface&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#team"&gt;Team device&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#vlan"&gt;VLAN (Virtual LAN)&lt;/a&gt;&lt;a href="#vxlan"&gt; &lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#vxlan"&gt;VXLAN (Virtual eXtensible Local Area Network)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#macvlan"&gt;MACVLAN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#ipvlan"&gt;IPVLAN&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#macvtap"&gt;MACVTAP/IPVTAP&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#macsec"&gt;MACsec (Media Access Control Security)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#veth"&gt;VETH (Virtual Ethernet)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#vcan"&gt;VCAN (Virtual CAN)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#vxcan"&gt;VXCAN (Virtual CAN tunnel)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#ipoib"&gt;IPOIB (IP-over-InfiniBand)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#nlmon"&gt;NLMON (NetLink MONitor)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#dummy"&gt;Dummy interface&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#ifb"&gt;IFB (Intermediate Functional Block)&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;After reading this article, you will know what these interfaces are, what&amp;#8217;s the difference between them, when to use them, and how to create them.&lt;/p&gt; &lt;p&gt;&lt;span id="more-525757"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;a name="bridge"&gt;&lt;/a&gt;Bridge&lt;/h2&gt; &lt;p&gt;A Linux bridge behaves like a network switch. It forwards packets between interfaces that are connected to it. It&amp;#8217;s usually used for forwarding packets on routers, on gateways, or between VMs and network namespaces on a host. It also supports STP, VLAN filter, and multicast snooping.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bridge.png"&gt;&lt;img class=" aligncenter wp-image-525817 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bridge.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bridge.png" alt="Bridge diagram" width="654" height="439" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bridge.png 654w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bridge-300x201.png 300w" sizes="(max-width: 654px) 100vw, 654px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use a bridge when you want to establish communication channels between VMs, containers, and your hosts.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a bridge:&lt;/p&gt; &lt;pre&gt;# ip link add br0 type bridge # ip link set eth0 master br0 # ip link set tap1 master br0 # ip link set tap2 master br0 # ip link set veth1 master br0 &lt;/pre&gt; &lt;p&gt;This creates a bridge device named &lt;code&gt;br0&lt;/code&gt; and sets two TAP devices (&lt;code&gt;tap1&lt;/code&gt;, &lt;code&gt;tap2&lt;/code&gt;), a VETH device (&lt;code&gt;veth1&lt;/code&gt;), and a physical device (&lt;code&gt;eth0&lt;/code&gt;) as its slaves, as shown in the diagram above.&lt;/p&gt; &lt;h2&gt;&lt;a name="bonded"&gt;&lt;/a&gt;Bonded interface&lt;/h2&gt; &lt;p&gt;The Linux bonding driver provides a method for aggregating multiple network interfaces into a single logical &amp;#8220;bonded&amp;#8221; interface. The behavior of the bonded interface depends on the mode; generally speaking, modes provide either hot standby or load balancing services.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bond.png"&gt;&lt;img class=" aligncenter wp-image-525797 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bond.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bond.png" alt="Bonded interface" width="319" height="270" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/bond.png 319w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/bond-300x254.png 300w" sizes="(max-width: 319px) 100vw, 319px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use a bonded interface when you want to increase your link speed or do a failover on your server.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a bonded interface:&lt;/p&gt; &lt;pre&gt;ip link add bond1 type bond miimon 100 mode active-backup ip link set eth0 master bond1 ip link set eth1 master bond1 &lt;/pre&gt; &lt;p&gt;This creates a bonded interface named &lt;code&gt;bond1&lt;/code&gt; with mode active-backup. For other modes, please see the &lt;a href="https://www.kernel.org/doc/Documentation/networking/bonding.txt" target="_blank" rel="noopener"&gt;kernel documentation&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;a name="team"&gt;&lt;/a&gt;Team device&lt;/h2&gt; &lt;p&gt;Similar a bonded interface, the purpose of a team device is to provide a mechanism to group multiple NICs (ports) into one logical one (teamdev) at the L2 layer.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/team.png"&gt;&lt;img class=" aligncenter wp-image-525967 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/team.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/team.png" alt="Team device" width="322" height="273" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/team.png 322w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/team-300x254.png 300w" sizes="(max-width: 322px) 100vw, 322px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The main thing to realize is that a team device is not trying to replicate or mimic a bonded interface. What it does is to solve the same problem using a different approach, using, for example, a lockless (RCU) TX/RX path and modular design.&lt;/p&gt; &lt;p&gt;But there are also some functional differences between a bonded interface and a team. For example, a team supports LACP load-balancing, NS/NA (IPV6) link monitoring, D-Bus interface, etc., which are absent in bonding. For further details about the differences between bonding and team, see &lt;a href="https://github.com/jpirko/libteam/wiki/Bonding-vs.-Team-features" target="_blank" rel="noopener"&gt;Bonding vs. Team features&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use a team when you want to use some features that bonding doesn&amp;#8217;t provide.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a team:&lt;/p&gt; &lt;pre&gt;# teamd -o -n -U -d -t team0 -c '{"runner": {"name": "activebackup"},"link_watch": {"name": "ethtool"}}' # ip link set eth0 down # ip link set eth1 down # teamdctl team0 port add eth0 # teamdctl team0 port add eth1 &lt;/pre&gt; &lt;p&gt;This creates a team interface named &lt;code&gt;team0&lt;/code&gt; with mode &lt;code&gt;active-backup&lt;/code&gt;, and it adds &lt;code&gt;eth0&lt;/code&gt; and &lt;code&gt;eth1&lt;/code&gt; as &lt;code&gt;team0&lt;/code&gt;&amp;#8216;s sub-interfaces.&lt;/p&gt; &lt;p&gt;A new driver called &lt;a href="https://www.kernel.org/doc/html/latest/networking/net_failover.html" target="_blank" rel="noopener"&gt;net_failover&lt;/a&gt; has been added to Linux recently. It&amp;#8217;s another failover master net device for virtualization and manages a primary (&lt;a href="https://wiki.libvirt.org/page/Networking#PCI_Passthrough_of_host_network_devices" target="_blank" rel="noopener"&gt;passthru/VF [Virtual Function]&lt;/a&gt; device) slave net device and a standby (the original paravirtual interface) slave net device.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/net_failover.png"&gt;&lt;img class=" aligncenter wp-image-525957 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/net_failover.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/net_failover.png" alt="Net_failover driver" width="424" height="358" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/net_failover.png 424w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/net_failover-300x253.png 300w" sizes="(max-width: 424px) 100vw, 424px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h2&gt;&lt;a name="vlan"&gt;&lt;/a&gt;VLAN&lt;/h2&gt; &lt;p&gt;A VLAN, aka virtual LAN, separates broadcast domains by adding tags to network packets. VLANs allow network administrators to group hosts under the same switch or between different switches.&lt;/p&gt; &lt;p&gt;The VLAN header looks like:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01.png"&gt;&lt;img class=" aligncenter wp-image-525997 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01.png" alt="VLAN header" width="891" height="351" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01.png 891w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01-300x118.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan_01-768x303.png 768w" sizes="(max-width: 891px) 100vw, 891px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use a VLAN when you want to separate subnet in VMs, namespaces, or hosts.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a VLAN:&lt;/p&gt; &lt;pre&gt;# ip link add link eth0 name eth0.2 type vlan id 2 # ip link add link eth0 name eth0.3 type vlan id 3 &lt;/pre&gt; &lt;p&gt;This adds VLAN 2 with name &lt;code&gt;eth0.2&lt;/code&gt; and VLAN 3 with name &lt;code&gt;eth0.3&lt;/code&gt;. The topology looks like this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan.png"&gt;&lt;img class=" aligncenter wp-image-525987 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan.png" alt="VLAN topology" width="283" height="282" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan.png 283w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vlan-150x150.png 150w" sizes="(max-width: 283px) 100vw, 283px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: When configuring a VLAN, you need to make sure the switch connected to the host is able to handle VLAN tags, for example, by setting the switch port to trunk mode.&lt;/p&gt; &lt;h2&gt;&lt;a name="vxlan"&gt;&lt;/a&gt;VXLAN&lt;/h2&gt; &lt;p&gt;VXLAN (Virtual eXtensible Local Area Network) is a tunneling protocol designed to solve the problem of limited VLAN IDs (4,096) in IEEE 802.1q. It is described by &lt;a href="https://tools.ietf.org/html/rfc7348" target="_blank" rel="noopener"&gt;IETF RFC 7348&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;With a 24-bit segment ID, aka VXLAN Network Identifier (VNI), VXLAN allows up to 2^24 (16,777,216) virtual LANs, which is 4,096 times the VLAN capacity.&lt;/p&gt; &lt;p&gt;VXLAN encapsulates Layer 2 frames with a VXLAN header into a UDP-IP packet, which looks like this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01.png"&gt;&lt;img class=" aligncenter wp-image-526017 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01.png" alt="VXLAN encapsulates Layer 2 frames with a VXLAN header into a UDP-IP packet" width="983" height="276" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01.png 983w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01-300x84.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan_01-768x216.png 768w" sizes="(max-width: 983px) 100vw, 983px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;VXLAN is typically deployed in data centers on virtualized hosts, which may be spread across multiple racks.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan.png"&gt;&lt;img class=" aligncenter wp-image-526007 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan.png" alt="Typical VXLAN deployment" width="813" height="301" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan.png 813w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan-300x111.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/vxlan-768x284.png 768w" sizes="(max-width: 813px) 100vw, 813px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to use VXLAN:&lt;/p&gt; &lt;pre&gt;# ip link add vx0 type vxlan id 100 local 1.1.1.1 remote 2.2.2.2 dev eth0 dstport 4789 &lt;/pre&gt; &lt;p&gt;For reference, you can read the &lt;a href="https://www.kernel.org/doc/Documentation/networking/vxlan.txt" target="_blank" rel="noopener"&gt;VXLAN kernel documentation&lt;/a&gt; or &lt;a href="https://vincent.bernat.ch/en/blog/2017-vxlan-linux" target="_blank" rel="noopener"&gt;this VXLAN introduction&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;a name="macvlan"&gt;&lt;/a&gt;MACVLAN&lt;/h2&gt; &lt;p&gt;With VLAN, you can create multiple interfaces on top of a single one and filter packages based on a VLAN tag. With MACVLAN, you can create multiple interfaces with different Layer 2 (that is, Ethernet MAC) addresses on top of a single one.&lt;/p&gt; &lt;p&gt;Before MACVLAN, if you wanted to connect to physical network from a VM or namespace, you would have needed to create TAP/VETH devices and attach one side to a bridge and attach a physical interface to the bridge on the host at the same time, as shown below.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/br_ns.png"&gt;&lt;img class=" aligncenter wp-image-525827 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/br_ns.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/br_ns.png" alt="Configuration before MACVLAN" width="436" height="376" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/br_ns.png 436w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/br_ns-300x259.png 300w" sizes="(max-width: 436px) 100vw, 436px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Now, with MACVLAN, you can bind a physical interface that is associated with a MACVLAN directly to namespaces, without the need for a bridge.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan.png"&gt;&lt;img class=" aligncenter wp-image-525897 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan.png" alt="Configuration with MACVLAN" width="439" height="372" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan.png 439w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan-300x254.png 300w" sizes="(max-width: 439px) 100vw, 439px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are five MACVLAN types:&lt;/p&gt; &lt;p&gt;1. Private: doesn&amp;#8217;t allow communication between MACVLAN instances on the same physical interface, even if the external switch supports hairpin mode.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_01.png"&gt;&lt;img class=" aligncenter wp-image-525907 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_01.png" alt="Private MACVLAN configuration" width="428" height="367" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_01.png 428w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_01-300x257.png 300w" sizes="(max-width: 428px) 100vw, 428px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;2. VEPA: data from one MACVLAN instance to the other on the same physical interface is transmitted over the physical interface. Either the attached switch needs to support hairpin mode or there must be a TCP/IP router forwarding the packets in order to allow communication.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_02.png"&gt;&lt;img class=" aligncenter wp-image-525917 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_02.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_02.png" alt="VEPA MACVLAN configuration" width="433" height="372" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_02.png 433w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_02-300x258.png 300w" sizes="(max-width: 433px) 100vw, 433px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;3. Bridge: all endpoints are directly connected to each other with a simple bridge via the physical interface.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_03.png"&gt;&lt;img class=" aligncenter wp-image-525927 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_03.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_03.png" alt="Bridge MACVLAN configuration" width="435" height="369" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_03.png 435w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_03-300x254.png 300w" sizes="(max-width: 435px) 100vw, 435px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;4. Passthru: allows a single VM to be connected directly to the physical interface.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_04.png"&gt;&lt;img class=" aligncenter wp-image-525937 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_04.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_04.png" alt="Passthru MACVLAN configuration" width="291" height="318" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_04.png 291w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvlan_04-275x300.png 275w" sizes="(max-width: 291px) 100vw, 291px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;5. Source: the source mode is used to filter traffic based on a list of allowed source MAC addresses to create MAC-based VLAN associations. Please see the &lt;a href="https://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git/commit/?id=79cf79abce71" target="_blank" rel="noopener"&gt;commit message&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The type is chosen according to different needs. Bridge mode is the most commonly used.&lt;/p&gt; &lt;p&gt;Use a MACVLAN when you want to connect directly to a physical network from containers.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to set up a MACVLAN:&lt;/p&gt; &lt;pre&gt;# ip link add macv1 link eth0 type macvlan mode bridge # ip link add macv2 link eth0 type macvlan mode bridge # ip netns add net1 # ip netns add net2 # ip link set macvlan1 netns net1 # ip link set macvlan2 netns net2 &lt;/pre&gt; &lt;p&gt;This creates two new MACVLAN devices in bridge mode and assigns these two devices to two different namespaces.&lt;/p&gt; &lt;h2&gt;&lt;a name="ipvlan"&gt;&lt;/a&gt;IPVLAN&lt;/h2&gt; &lt;p&gt;IPVLAN is similar to MACVLAN with the difference being that the endpoints have the same MAC address.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan.png"&gt;&lt;img class=" aligncenter wp-image-525847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan.png" alt="IPVLAN configuration" width="861" height="373" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan.png 861w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan-768x333.png 768w" sizes="(max-width: 861px) 100vw, 861px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;IPVLAN supports L2 and L3 mode. IPVLAN L2 mode acts like a MACVLAN in bridge mode. The parent interface looks like a bridge or switch.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_01.png"&gt;&lt;img class=" aligncenter wp-image-525857 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_01.png" alt="IPVLAN L2 mode" width="438" height="367" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_01.png 438w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_01-300x251.png 300w" sizes="(max-width: 438px) 100vw, 438px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;In IPVLAN L3 mode, the parent interface acts like a router and packets are routed between endpoints, which gives better scalability.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_02.png"&gt;&lt;img class=" aligncenter wp-image-525867 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_02.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_02.png" alt="IPVLAN L3 mode" width="437" height="373" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_02.png 437w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/ipvlan_02-300x256.png 300w" sizes="(max-width: 437px) 100vw, 437px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Regarding when to use an IPVLAN, the &lt;a href="https://www.kernel.org/doc/Documentation/networking/ipvlan.txt" target="_blank" rel="noopener"&gt;IPVLAN kernel documentation&lt;/a&gt; says that MACVLAN and IPVLAN &amp;#8220;are very similar in many regards and the specific use case could very well define which device to choose. if one of the following situations defines your use case then you can choose to use ipvlan &amp;#8211;&lt;br /&gt; (a) The Linux host that is connected to the external switch / router has policy configured that allows only one mac per port.&lt;br /&gt; (b) No of virtual devices created on a master exceed the mac capacity and puts the NIC in promiscuous mode and degraded performance is a concern.&lt;br /&gt; (c) If the slave device is to be put into the hostile / untrusted network namespace where L2 on the slave could be changed / misused.&amp;#8221;&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to set up an IPVLAN instance:&lt;/p&gt; &lt;pre&gt;# ip netns add ns0 # ip link add name ipv1 link eth0 type ipvlan mode l2 # ip link set dev ipvl0 netns ns0 &lt;/pre&gt; &lt;p&gt;This creates an IPVLAN device named &lt;code&gt;ipvl0&lt;/code&gt; with mode L2, assigned to namespace &lt;code&gt;ns0&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;&lt;a name="macvtap"&gt;&lt;/a&gt;MACVTAP/IPVTAP&lt;/h2&gt; &lt;p&gt;MACVTAP/IPVTAP is a new device driver meant to simplify virtualized bridged networking. When a MACVTAP/IPVTAP instance is created on top of a physical interface, the kernel also creates a character device/dev/tapX to be used just like a &lt;a href="https://en.wikipedia.org/wiki/TUN/TAP" target="_blank" rel="noopener"&gt;TUN/TAP&lt;/a&gt; device, which can be directly used by KVM/QEMU.&lt;/p&gt; &lt;p&gt;With MACVTAP/IPVTAP, you can replace the combination of TUN/TAP and bridge drivers with a single module:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvtap.png"&gt;&lt;img class=" aligncenter wp-image-525947 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvtap.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvtap.png" alt="MACVTAP/IPVTAP instance" width="436" height="375" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvtap.png 436w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macvtap-300x258.png 300w" sizes="(max-width: 436px) 100vw, 436px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Typically, MACVLAN/IPVLAN is used to make both the guest and the host show up directly on the switch to which the host is connected. The difference between MACVTAP and IPVTAP is same as with MACVLAN/IPVLAN.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a MACVTAP instance:&lt;/p&gt; &lt;pre&gt;# ip link add link eth0 name macvtap0 type macvtap &lt;/pre&gt; &lt;h2&gt;&lt;a name="macsec"&gt;&lt;/a&gt;MACsec&lt;/h2&gt; &lt;p&gt;MACsec (Media Access Control Security) is an IEEE standard for security in wired Ethernet LANs. Similar to IPsec, as a layer 2 specification, MACsec can protect not only IP traffic but also ARP, neighbor discovery, and DHCP. The MACsec headers look like this:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01.png"&gt;&lt;img class=" aligncenter wp-image-525887 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01.png" alt="MACsec header" width="999" height="226" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01.png 999w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01-300x68.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec_01-768x174.png 768w" sizes="(max-width: 999px) 100vw, 999px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The main use case for MACsec is to secure all messages on a standard LAN including ARP, NS, and DHCP messages.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec.png"&gt;&lt;img class=" aligncenter wp-image-525877 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec.png" alt="MACsec configuration" width="452" height="277" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec.png 452w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/macsec-300x184.png 300w" sizes="(max-width: 452px) 100vw, 452px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to set up a MACsec configuration:&lt;/p&gt; &lt;pre&gt;# ip link add macsec0 link eth1 type macsec &lt;/pre&gt; &lt;p&gt;&lt;strong&gt;&lt;em&gt;Note&lt;/em&gt;&lt;/strong&gt;: This only adds a MACsec device called &lt;code&gt;macsec0&lt;/code&gt; on interface &lt;code&gt;eth1&lt;/code&gt;. For more detailed configurations, please see the &amp;#8220;Configuration example&amp;#8221; section in this &lt;a href="https://developers.redhat.com/blog/2016/10/14/macsec-a-different-solution-to-encrypt-network-traffic/" target="_blank" rel="noopener"&gt;MACsec introduction by Sabrina Dubroca&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;&lt;a name="veth"&gt;&lt;/a&gt;VETH&lt;/h2&gt; &lt;p&gt;The VETH (virtual Ethernet) device is a local Ethernet tunnel. Devices are created in pairs, as shown in the diagram below.&lt;/p&gt; &lt;p&gt;Packets transmitted on one device in the pair are immediately received on the other device. When either device is down, the link state of the pair is down.&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2018/10/veth.png"&gt;&lt;img class=" aligncenter wp-image-525977 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/10/veth.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/10/veth.png" alt="Pair of VETH devices" width="437" height="367" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/10/veth.png 437w, https://developers.redhat.com/blog/wp-content/uploads/2018/10/veth-300x252.png 300w" sizes="(max-width: 437px) 100vw, 437px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Use a VETH configuration when namespaces need to communicate to the main host namespace or between each other.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to set up a VETH configuration:&lt;/p&gt; &lt;pre&gt;# ip netns add net1 # ip netns add net2 # ip link add veth1 netns net1 type veth peer name veth2 netns net2 &lt;/pre&gt; &lt;p&gt;This creates two namespaces, &lt;code&gt;net1&lt;/code&gt; and &lt;code&gt;net2&lt;/code&gt;, and a pair of VETH devices, and it assigns &lt;code&gt;veth1&lt;/code&gt; to namespace &lt;code&gt;net1&lt;/code&gt; and &lt;code&gt;veth2&lt;/code&gt; to namespace &lt;code&gt;net2&lt;/code&gt;. These two namespaces are connected with this VETH pair. Assign a pair of IP addresses, and you can ping and communicate between the two namespaces.&lt;/p&gt; &lt;h2&gt;&lt;a name="vcan"&gt;&lt;/a&gt;VCAN&lt;/h2&gt; &lt;p&gt;Similar to the network loopback devices, the VCAN (virtual CAN) driver offers a virtual local CAN (Controller Area Network) interface, so users can send/receive CAN messages via a VCAN interface. CAN is mostly used in the automotive field nowadays.&lt;/p&gt; &lt;p&gt;For more CAN protocol information, please refer to the &lt;a href="https://www.kernel.org/doc/Documentation/networking/can.txt" target="_blank" rel="noopener"&gt;kernel CAN documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use a VCAN when you want to test a CAN protocol implementation on the local host.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a VCAN:&lt;/p&gt; &lt;pre&gt;# ip link add dev vcan1 type vcan &lt;/pre&gt; &lt;h2&gt;&lt;a name="vxcan"&gt;&lt;/a&gt;VXCAN&lt;/h2&gt; &lt;p&gt;Similar to the VETH driver, a VXCAN (Virtual CAN tunnel) implements a local CAN traffic tunnel between two VCAN network devices. When you create a VXCAN instance, two VXCAN devices are created as a pair. When one end receives the packet, the packet appears on the device&amp;#8217;s pair and vice versa. VXCAN can be used for cross-namespace communication.&lt;/p&gt; &lt;p&gt;Use a VXCAN configuration when you want to send CAN message across namespaces.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to set up a VXCAN instance:&lt;/p&gt; &lt;pre&gt;# ip netns add net1 # ip netns add net2 # ip link add vxcan1 netns net1 type vxcan peer name vxcan2 netns net2 &lt;/pre&gt; &lt;h2&gt;&lt;a name="ipoib"&gt;&lt;/a&gt;IPOIB&lt;/h2&gt; &lt;p&gt;An IPOIB device supports the IP-over-InfiniBand protocol. This transports IP packets over InfiniBand (IB) so you can use your IB device as a fast NIC.&lt;/p&gt; &lt;p&gt;The IPoIB driver supports two modes of operation: datagram and connected. In datagram mode, the IB UD (Unreliable Datagram) transport is used. In connected mode, the IB RC (Reliable Connected) transport is used. The connected mode takes advantage of the connected nature of the IB transport and allows an MTU up to the maximal IP packet size of 64K.&lt;/p&gt; &lt;p&gt;For more details, please see the &lt;a href="https://www.kernel.org/doc/Documentation/infiniband/ipoib.txt" target="_blank" rel="noopener"&gt;IPOIB kernel documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use an IPOIB device when you have an IB device and want to communicate with a remote host via IP.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create an IPOIB device:&lt;/p&gt; &lt;pre&gt;# ip link add ipoib0 type ipoib mode connected &lt;/pre&gt; &lt;h2&gt;&lt;a name="nlmon"&gt;&lt;/a&gt;NLMON&lt;/h2&gt; &lt;p&gt;NLMON is a Netlink monitor device.&lt;/p&gt; &lt;p&gt;Use an NLMON device when you want to monitor system Netlink messages.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create an NLMON device:&lt;/p&gt; &lt;pre&gt;# ip link add nlmon0 type nlmon # ip link set nlmon0 up # tcpdump -i nlmon0 -w nlmsg.pcap &lt;/pre&gt; &lt;p&gt;This creates an NLMON device named &lt;code&gt;nlmon0&lt;/code&gt; and sets it up. Use a packet sniffer (for example, &lt;code&gt;tcpdump&lt;/code&gt;) to capture Netlink messages. Recent versions of Wireshark feature decoding of Netlink messages.&lt;/p&gt; &lt;h2&gt;&lt;a name="dummy"&gt;&lt;/a&gt;Dummy interface&lt;/h2&gt; &lt;p&gt;A dummy interface is entirely virtual like, for example, the loopback interface. The purpose of a dummy interface is to provide a device to route packets through without actually transmitting them.&lt;/p&gt; &lt;p&gt;Use a dummy interface to make an inactive SLIP (Serial Line Internet Protocol) address look like a real address for local programs. Nowadays, a dummy interface is mostly used for testing and debugging.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create a dummy interface:&lt;/p&gt; &lt;pre&gt;# ip link add dummy1 type dummy # ip addr add 1.1.1.1/24 dev dummy1 # ip link set dummy1 up &lt;/pre&gt; &lt;h2&gt;&lt;a name="ifb"&gt;&lt;/a&gt;IFB&lt;/h2&gt; &lt;p&gt;The IFB (Intermediate Functional Block) driver supplies a device that allows the concentration of traffic from several sources and the shaping incoming traffic instead of dropping it.&lt;/p&gt; &lt;p&gt;Use an IFB interface when you want to queue and shape incoming traffic.&lt;/p&gt; &lt;p&gt;Here&amp;#8217;s how to create an IFB interface:&lt;/p&gt; &lt;pre&gt;# ip link add ifb0 type ifb # ip link set ifb0 up # tc qdisc add dev ifb0 root sfq # tc qdisc add dev eth0 handle ffff: ingress # tc filter add dev eth0 parent ffff: u32 match u32 0 0 action mirred egress redirect dev ifb0 &lt;/pre&gt; &lt;p&gt;This creates an IFB device named &lt;code&gt;ifb0&lt;/code&gt; and replaces the root qdisc scheduler with SFQ (Stochastic Fairness Queueing), which is a classless queueing scheduler. Then it adds an ingress qdisc scheduler on &lt;code&gt;eth0&lt;/code&gt; and redirects all ingress traffic to &lt;code&gt;ifb0&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For more IFB qdisc use cases, please refer to this &lt;a href="https://wiki.linuxfoundation.org/networking/ifb" target="_blank" rel="noopener"&gt;Linux Foundation wiki on IFB&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Additional resources&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/virtual-networking/"&gt;Virtual networking articles&lt;/a&gt; on the Red Hat Developer blog&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/09/03/ovn-dynamic-ip-address-management/"&gt;Dynamic IP Address Management in Open Virtual Network (OVN)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/23/non-root-open-vswitch-rhel/"&gt;Non-root Open vSwitch in Red Hat Enterprise Linux&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/blog/tag/open-vswitch/"&gt;Open vSwitch articles&lt;/a&gt; on the Red hat Developer Blog&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;linkname=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F10%2F22%2Fintroduction-to-linux-interfaces-for-virtual-networking%2F&amp;#38;title=Introduction%20to%20Linux%20interfaces%20for%20virtual%20networking" data-a2a-url="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/" data-a2a-title="Introduction to Linux interfaces for virtual networking"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/"&gt;Introduction to Linux interfaces for virtual networking&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PIiEiMOAcpc" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Linux has rich virtual networking capabilities that are used as basis for hosting VMs and containers, as well as cloud environments. In this post, I will give a brief introduction to all commonly used virtual network interface types. There is no code analysis, only a brief introduction to the interfaces and their usage on Linux. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/"&gt;Introduction to Linux interfaces for virtual networking&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">525757</post-id><dc:creator>Hangbin Liu</dc:creator><dc:date>2018-10-22T19:35:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/</feedburner:origLink></entry></feed>
